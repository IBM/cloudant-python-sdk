:py:mod:`ibmcloudant.cloudant_v1`
=================================

.. py:module:: ibmcloudant.cloudant_v1

.. autodoc2-docstring:: ibmcloudant.cloudant_v1
   :parser: myst
   :allowtitles:

Module Contents
---------------

Classes
~~~~~~~

.. list-table::
   :class: autosummary longtable
   :align: left

   * - :py:obj:`ActiveTask <ibmcloudant.cloudant_v1.ActiveTask>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask
          :parser: myst
          :summary:
   * - :py:obj:`ActivityTrackerEvents <ibmcloudant.cloudant_v1.ActivityTrackerEvents>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents
          :parser: myst
          :summary:
   * - :py:obj:`AllDocsQueriesResult <ibmcloudant.cloudant_v1.AllDocsQueriesResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQueriesResult
          :parser: myst
          :summary:
   * - :py:obj:`AllDocsQuery <ibmcloudant.cloudant_v1.AllDocsQuery>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQuery
          :parser: myst
          :summary:
   * - :py:obj:`AllDocsResult <ibmcloudant.cloudant_v1.AllDocsResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsResult
          :parser: myst
          :summary:
   * - :py:obj:`Analyzer <ibmcloudant.cloudant_v1.Analyzer>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer
          :parser: myst
          :summary:
   * - :py:obj:`AnalyzerConfiguration <ibmcloudant.cloudant_v1.AnalyzerConfiguration>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration
          :parser: myst
          :summary:
   * - :py:obj:`ApiKeysResult <ibmcloudant.cloudant_v1.ApiKeysResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ApiKeysResult
          :parser: myst
          :summary:
   * - :py:obj:`Attachment <ibmcloudant.cloudant_v1.Attachment>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Attachment
          :parser: myst
          :summary:
   * - :py:obj:`BulkDocs <ibmcloudant.cloudant_v1.BulkDocs>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkDocs
          :parser: myst
          :summary:
   * - :py:obj:`BulkGetQueryDocument <ibmcloudant.cloudant_v1.BulkGetQueryDocument>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetQueryDocument
          :parser: myst
          :summary:
   * - :py:obj:`BulkGetResult <ibmcloudant.cloudant_v1.BulkGetResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResult
          :parser: myst
          :summary:
   * - :py:obj:`BulkGetResultDocument <ibmcloudant.cloudant_v1.BulkGetResultDocument>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultDocument
          :parser: myst
          :summary:
   * - :py:obj:`BulkGetResultItem <ibmcloudant.cloudant_v1.BulkGetResultItem>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultItem
          :parser: myst
          :summary:
   * - :py:obj:`CapacityThroughputInformation <ibmcloudant.cloudant_v1.CapacityThroughputInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformation
          :parser: myst
          :summary:
   * - :py:obj:`CapacityThroughputInformationCurrent <ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent
          :parser: myst
          :summary:
   * - :py:obj:`CapacityThroughputInformationTarget <ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget
          :parser: myst
          :summary:
   * - :py:obj:`Change <ibmcloudant.cloudant_v1.Change>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Change
          :parser: myst
          :summary:
   * - :py:obj:`ChangesResult <ibmcloudant.cloudant_v1.ChangesResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResult
          :parser: myst
          :summary:
   * - :py:obj:`ChangesResultItem <ibmcloudant.cloudant_v1.ChangesResultItem>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResultItem
          :parser: myst
          :summary:
   * - :py:obj:`CloudantV1 <ibmcloudant.cloudant_v1.CloudantV1>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1
          :parser: myst
          :summary:
   * - :py:obj:`ContentInformationSizes <ibmcloudant.cloudant_v1.ContentInformationSizes>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ContentInformationSizes
          :parser: myst
          :summary:
   * - :py:obj:`CorsInformation <ibmcloudant.cloudant_v1.CorsInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CorsInformation
          :parser: myst
          :summary:
   * - :py:obj:`CurrentThroughputInformation <ibmcloudant.cloudant_v1.CurrentThroughputInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformation
          :parser: myst
          :summary:
   * - :py:obj:`CurrentThroughputInformationThroughput <ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput
          :parser: myst
          :summary:
   * - :py:obj:`DatabaseInformation <ibmcloudant.cloudant_v1.DatabaseInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformation
          :parser: myst
          :summary:
   * - :py:obj:`DatabaseInformationCluster <ibmcloudant.cloudant_v1.DatabaseInformationCluster>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationCluster
          :parser: myst
          :summary:
   * - :py:obj:`DatabaseInformationProps <ibmcloudant.cloudant_v1.DatabaseInformationProps>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationProps
          :parser: myst
          :summary:
   * - :py:obj:`DbEvent <ibmcloudant.cloudant_v1.DbEvent>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent
          :parser: myst
          :summary:
   * - :py:obj:`DbUpdates <ibmcloudant.cloudant_v1.DbUpdates>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbUpdates
          :parser: myst
          :summary:
   * - :py:obj:`DbsInfoResult <ibmcloudant.cloudant_v1.DbsInfoResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbsInfoResult
          :parser: myst
          :summary:
   * - :py:obj:`DeleteAttachmentEnums <ibmcloudant.cloudant_v1.DeleteAttachmentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteAttachmentEnums
          :parser: myst
          :summary:
   * - :py:obj:`DeleteDesignDocumentEnums <ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`DeleteDocumentEnums <ibmcloudant.cloudant_v1.DeleteDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`DeleteIndexEnums <ibmcloudant.cloudant_v1.DeleteIndexEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteIndexEnums
          :parser: myst
          :summary:
   * - :py:obj:`DeleteLocalDocumentEnums <ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`DeleteReplicationDocumentEnums <ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`DesignDocument <ibmcloudant.cloudant_v1.DesignDocument>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocument
          :parser: myst
          :summary:
   * - :py:obj:`DesignDocumentInformation <ibmcloudant.cloudant_v1.DesignDocumentInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentInformation
          :parser: myst
          :summary:
   * - :py:obj:`DesignDocumentOptions <ibmcloudant.cloudant_v1.DesignDocumentOptions>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentOptions
          :parser: myst
          :summary:
   * - :py:obj:`DesignDocumentViewIndex <ibmcloudant.cloudant_v1.DesignDocumentViewIndex>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewIndex
          :parser: myst
          :summary:
   * - :py:obj:`DesignDocumentViewsMapReduce <ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce
          :parser: myst
          :summary:
   * - :py:obj:`DocsResultRow <ibmcloudant.cloudant_v1.DocsResultRow>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRow
          :parser: myst
          :summary:
   * - :py:obj:`DocsResultRowValue <ibmcloudant.cloudant_v1.DocsResultRowValue>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRowValue
          :parser: myst
          :summary:
   * - :py:obj:`Document <ibmcloudant.cloudant_v1.Document>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Document
          :parser: myst
          :summary:
   * - :py:obj:`DocumentResult <ibmcloudant.cloudant_v1.DocumentResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentResult
          :parser: myst
          :summary:
   * - :py:obj:`DocumentRevisionStatus <ibmcloudant.cloudant_v1.DocumentRevisionStatus>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus
          :parser: myst
          :summary:
   * - :py:obj:`DocumentShardInfo <ibmcloudant.cloudant_v1.DocumentShardInfo>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentShardInfo
          :parser: myst
          :summary:
   * - :py:obj:`ExecutionStats <ibmcloudant.cloudant_v1.ExecutionStats>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExecutionStats
          :parser: myst
          :summary:
   * - :py:obj:`ExplainResult <ibmcloudant.cloudant_v1.ExplainResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResult
          :parser: myst
          :summary:
   * - :py:obj:`ExplainResultMrArgs <ibmcloudant.cloudant_v1.ExplainResultMrArgs>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs
          :parser: myst
          :summary:
   * - :py:obj:`ExplainResultOpts <ibmcloudant.cloudant_v1.ExplainResultOpts>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultOpts
          :parser: myst
          :summary:
   * - :py:obj:`FindResult <ibmcloudant.cloudant_v1.FindResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.FindResult
          :parser: myst
          :summary:
   * - :py:obj:`GetDbUpdatesEnums <ibmcloudant.cloudant_v1.GetDbUpdatesEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums
          :parser: myst
          :summary:
   * - :py:obj:`GetLocalDocumentEnums <ibmcloudant.cloudant_v1.GetLocalDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`GetSchedulerDocsEnums <ibmcloudant.cloudant_v1.GetSchedulerDocsEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums
          :parser: myst
          :summary:
   * - :py:obj:`IndexAnalysis <ibmcloudant.cloudant_v1.IndexAnalysis>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysis
          :parser: myst
          :summary:
   * - :py:obj:`IndexAnalysisExclusionReason <ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason
          :parser: myst
          :summary:
   * - :py:obj:`IndexCandidate <ibmcloudant.cloudant_v1.IndexCandidate>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexCandidate
          :parser: myst
          :summary:
   * - :py:obj:`IndexDefinition <ibmcloudant.cloudant_v1.IndexDefinition>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexDefinition
          :parser: myst
          :summary:
   * - :py:obj:`IndexField <ibmcloudant.cloudant_v1.IndexField>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField
          :parser: myst
          :summary:
   * - :py:obj:`IndexInformation <ibmcloudant.cloudant_v1.IndexInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation
          :parser: myst
          :summary:
   * - :py:obj:`IndexResult <ibmcloudant.cloudant_v1.IndexResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult
          :parser: myst
          :summary:
   * - :py:obj:`IndexTextOperatorDefaultField <ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField
          :parser: myst
          :summary:
   * - :py:obj:`IndexesInformation <ibmcloudant.cloudant_v1.IndexesInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexesInformation
          :parser: myst
          :summary:
   * - :py:obj:`MembershipInformation <ibmcloudant.cloudant_v1.MembershipInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.MembershipInformation
          :parser: myst
          :summary:
   * - :py:obj:`Ok <ibmcloudant.cloudant_v1.Ok>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Ok
          :parser: myst
          :summary:
   * - :py:obj:`PartitionInformation <ibmcloudant.cloudant_v1.PartitionInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformation
          :parser: myst
          :summary:
   * - :py:obj:`PartitionInformationIndexes <ibmcloudant.cloudant_v1.PartitionInformationIndexes>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexes
          :parser: myst
          :summary:
   * - :py:obj:`PartitionInformationIndexesIndexes <ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes
          :parser: myst
          :summary:
   * - :py:obj:`PartitionInformationSizes <ibmcloudant.cloudant_v1.PartitionInformationSizes>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationSizes
          :parser: myst
          :summary:
   * - :py:obj:`PartitionedIndexesDetailedInformation <ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation
          :parser: myst
          :summary:
   * - :py:obj:`PartitionedIndexesInformation <ibmcloudant.cloudant_v1.PartitionedIndexesInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesInformation
          :parser: myst
          :summary:
   * - :py:obj:`PostChangesAsStreamEnums <ibmcloudant.cloudant_v1.PostChangesAsStreamEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums
          :parser: myst
          :summary:
   * - :py:obj:`PostChangesEnums <ibmcloudant.cloudant_v1.PostChangesEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums
          :parser: myst
          :summary:
   * - :py:obj:`PostDesignDocsQueriesEnums <ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums
          :parser: myst
          :summary:
   * - :py:obj:`PostDocumentEnums <ibmcloudant.cloudant_v1.PostDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`PutDesignDocumentEnums <ibmcloudant.cloudant_v1.PutDesignDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDesignDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`PutDocumentEnums <ibmcloudant.cloudant_v1.PutDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`PutLocalDocumentEnums <ibmcloudant.cloudant_v1.PutLocalDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`PutReplicationDocumentEnums <ibmcloudant.cloudant_v1.PutReplicationDocumentEnums>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums
          :parser: myst
          :summary:
   * - :py:obj:`ReplicationCreateTargetParameters <ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters
          :parser: myst
          :summary:
   * - :py:obj:`ReplicationDatabase <ibmcloudant.cloudant_v1.ReplicationDatabase>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabase
          :parser: myst
          :summary:
   * - :py:obj:`ReplicationDatabaseAuth <ibmcloudant.cloudant_v1.ReplicationDatabaseAuth>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth
          :parser: myst
          :summary:
   * - :py:obj:`ReplicationDatabaseAuthBasic <ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic
          :parser: myst
          :summary:
   * - :py:obj:`ReplicationDatabaseAuthIam <ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam
          :parser: myst
          :summary:
   * - :py:obj:`ReplicationDocument <ibmcloudant.cloudant_v1.ReplicationDocument>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDocument
          :parser: myst
          :summary:
   * - :py:obj:`Revisions <ibmcloudant.cloudant_v1.Revisions>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Revisions
          :parser: myst
          :summary:
   * - :py:obj:`RevsDiff <ibmcloudant.cloudant_v1.RevsDiff>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.RevsDiff
          :parser: myst
          :summary:
   * - :py:obj:`SchedulerDocsResult <ibmcloudant.cloudant_v1.SchedulerDocsResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocsResult
          :parser: myst
          :summary:
   * - :py:obj:`SchedulerDocument <ibmcloudant.cloudant_v1.SchedulerDocument>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument
          :parser: myst
          :summary:
   * - :py:obj:`SchedulerInfo <ibmcloudant.cloudant_v1.SchedulerInfo>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerInfo
          :parser: myst
          :summary:
   * - :py:obj:`SchedulerJob <ibmcloudant.cloudant_v1.SchedulerJob>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJob
          :parser: myst
          :summary:
   * - :py:obj:`SchedulerJobEvent <ibmcloudant.cloudant_v1.SchedulerJobEvent>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobEvent
          :parser: myst
          :summary:
   * - :py:obj:`SchedulerJobsResult <ibmcloudant.cloudant_v1.SchedulerJobsResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobsResult
          :parser: myst
          :summary:
   * - :py:obj:`SearchAnalyzeResult <ibmcloudant.cloudant_v1.SearchAnalyzeResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchAnalyzeResult
          :parser: myst
          :summary:
   * - :py:obj:`SearchIndexDefinition <ibmcloudant.cloudant_v1.SearchIndexDefinition>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexDefinition
          :parser: myst
          :summary:
   * - :py:obj:`SearchIndexInfo <ibmcloudant.cloudant_v1.SearchIndexInfo>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexInfo
          :parser: myst
          :summary:
   * - :py:obj:`SearchInfoResult <ibmcloudant.cloudant_v1.SearchInfoResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchInfoResult
          :parser: myst
          :summary:
   * - :py:obj:`SearchResult <ibmcloudant.cloudant_v1.SearchResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResult
          :parser: myst
          :summary:
   * - :py:obj:`SearchResultProperties <ibmcloudant.cloudant_v1.SearchResultProperties>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultProperties
          :parser: myst
          :summary:
   * - :py:obj:`SearchResultRow <ibmcloudant.cloudant_v1.SearchResultRow>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultRow
          :parser: myst
          :summary:
   * - :py:obj:`Security <ibmcloudant.cloudant_v1.Security>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security
          :parser: myst
          :summary:
   * - :py:obj:`SecurityObject <ibmcloudant.cloudant_v1.SecurityObject>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SecurityObject
          :parser: myst
          :summary:
   * - :py:obj:`SelectorHint <ibmcloudant.cloudant_v1.SelectorHint>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint
          :parser: myst
          :summary:
   * - :py:obj:`ServerInformation <ibmcloudant.cloudant_v1.ServerInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerInformation
          :parser: myst
          :summary:
   * - :py:obj:`ServerVendor <ibmcloudant.cloudant_v1.ServerVendor>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerVendor
          :parser: myst
          :summary:
   * - :py:obj:`SessionAuthentication <ibmcloudant.cloudant_v1.SessionAuthentication>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionAuthentication
          :parser: myst
          :summary:
   * - :py:obj:`SessionInformation <ibmcloudant.cloudant_v1.SessionInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionInformation
          :parser: myst
          :summary:
   * - :py:obj:`ShardsInformation <ibmcloudant.cloudant_v1.ShardsInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ShardsInformation
          :parser: myst
          :summary:
   * - :py:obj:`ThroughputInformation <ibmcloudant.cloudant_v1.ThroughputInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ThroughputInformation
          :parser: myst
          :summary:
   * - :py:obj:`UpInformation <ibmcloudant.cloudant_v1.UpInformation>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation
          :parser: myst
          :summary:
   * - :py:obj:`UpdatesPending <ibmcloudant.cloudant_v1.UpdatesPending>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpdatesPending
          :parser: myst
          :summary:
   * - :py:obj:`UserContext <ibmcloudant.cloudant_v1.UserContext>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext
          :parser: myst
          :summary:
   * - :py:obj:`UuidsResult <ibmcloudant.cloudant_v1.UuidsResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UuidsResult
          :parser: myst
          :summary:
   * - :py:obj:`ViewQueriesResult <ibmcloudant.cloudant_v1.ViewQueriesResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQueriesResult
          :parser: myst
          :summary:
   * - :py:obj:`ViewQuery <ibmcloudant.cloudant_v1.ViewQuery>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery
          :parser: myst
          :summary:
   * - :py:obj:`ViewResult <ibmcloudant.cloudant_v1.ViewResult>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResult
          :parser: myst
          :summary:
   * - :py:obj:`ViewResultRow <ibmcloudant.cloudant_v1.ViewResultRow>`
     - .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResultRow
          :parser: myst
          :summary:

API
~~~

.. py:class:: ActiveTask(database: str, node: str, pid: str, started_on: int, type: str, updated_on: int, *, bulk_get_attempts: typing.Optional[int] = None, bulk_get_docs: typing.Optional[int] = None, changes_done: typing.Optional[int] = None, changes_pending: typing.Optional[int] = None, checkpoint_interval: typing.Optional[int] = None, checkpointed_source_seq: typing.Optional[str] = None, continuous: typing.Optional[bool] = None, design_document: typing.Optional[str] = None, doc_id: typing.Optional[str] = None, doc_write_failures: typing.Optional[int] = None, docs_read: typing.Optional[int] = None, docs_written: typing.Optional[int] = None, index: typing.Optional[str] = None, indexer_pid: typing.Optional[str] = None, missing_revisions_found: typing.Optional[int] = None, phase: typing.Optional[str] = None, process_status: typing.Optional[str] = None, progress: typing.Optional[int] = None, replication_id: typing.Optional[str] = None, retry: typing.Optional[bool] = None, revisions_checked: typing.Optional[int] = None, source: typing.Optional[str] = None, source_seq: typing.Optional[str] = None, target: typing.Optional[str] = None, through_seq: typing.Optional[str] = None, total_changes: typing.Optional[int] = None, user: typing.Optional[str] = None, view: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.ActiveTask

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.__init__
      :parser: myst

   .. py:class:: PhaseEnum()
      :canonical: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.__init__
         :parser: myst

      .. py:attribute:: DOCID_COPY
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.DOCID_COPY
         :value: 'docid_copy'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.DOCID_COPY
            :parser: myst

      .. py:attribute:: DOCID_SORT
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.DOCID_SORT
         :value: 'docid_sort'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.DOCID_SORT
            :parser: myst

      .. py:attribute:: DOCUMENT_COPY
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.DOCUMENT_COPY
         :value: 'document_copy'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.DOCUMENT_COPY
            :parser: myst

      .. py:attribute:: IDS
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.IDS
         :value: 'ids'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.IDS
            :parser: myst

      .. py:attribute:: VIEW
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.VIEW
         :value: 'view'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.PhaseEnum.VIEW
            :parser: myst

   .. py:class:: ProcessStatusEnum()
      :canonical: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.__init__
         :parser: myst

      .. py:attribute:: EXITING
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.EXITING
         :value: 'exiting'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.EXITING
            :parser: myst

      .. py:attribute:: GARBAGE_COLLECTING
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.GARBAGE_COLLECTING
         :value: 'garbage_collecting'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.GARBAGE_COLLECTING
            :parser: myst

      .. py:attribute:: RUNNABLE
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.RUNNABLE
         :value: 'runnable'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.RUNNABLE
            :parser: myst

      .. py:attribute:: RUNNING
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.RUNNING
         :value: 'running'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.RUNNING
            :parser: myst

      .. py:attribute:: SUSPENDED
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.SUSPENDED
         :value: 'suspended'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.SUSPENDED
            :parser: myst

      .. py:attribute:: WAITING
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.WAITING
         :value: 'waiting'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.ProcessStatusEnum.WAITING
            :parser: myst

   .. py:class:: TypeEnum()
      :canonical: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.__init__
         :parser: myst

      .. py:attribute:: DATABASE_COMPACTION
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.DATABASE_COMPACTION
         :value: 'database_compaction'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.DATABASE_COMPACTION
            :parser: myst

      .. py:attribute:: INDEXER
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.INDEXER
         :value: 'indexer'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.INDEXER
            :parser: myst

      .. py:attribute:: REPLICATION
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.REPLICATION
         :value: 'replication'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.REPLICATION
            :parser: myst

      .. py:attribute:: SEARCH_INDEXER
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.SEARCH_INDEXER
         :value: 'search_indexer'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.SEARCH_INDEXER
            :parser: myst

      .. py:attribute:: VIEW_COMPACTION
         :canonical: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.VIEW_COMPACTION
         :value: 'view_compaction'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.TypeEnum.VIEW_COMPACTION
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ActiveTask
      :canonical: ibmcloudant.cloudant_v1.ActiveTask.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ActiveTask.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActiveTask.to_dict
         :parser: myst

.. py:class:: ActivityTrackerEvents(types: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.ActivityTrackerEvents

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents.__init__
      :parser: myst

   .. py:class:: TypesEnum()
      :canonical: ibmcloudant.cloudant_v1.ActivityTrackerEvents.TypesEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents.TypesEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents.TypesEnum.__init__
         :parser: myst

      .. py:attribute:: DATA
         :canonical: ibmcloudant.cloudant_v1.ActivityTrackerEvents.TypesEnum.DATA
         :value: 'data'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents.TypesEnum.DATA
            :parser: myst

      .. py:attribute:: MANAGEMENT
         :canonical: ibmcloudant.cloudant_v1.ActivityTrackerEvents.TypesEnum.MANAGEMENT
         :value: 'management'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents.TypesEnum.MANAGEMENT
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ActivityTrackerEvents
      :canonical: ibmcloudant.cloudant_v1.ActivityTrackerEvents.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ActivityTrackerEvents.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ActivityTrackerEvents.to_dict
         :parser: myst

.. py:class:: AllDocsQueriesResult(results: typing.List[ibmcloudant.cloudant_v1.AllDocsResult])
   :canonical: ibmcloudant.cloudant_v1.AllDocsQueriesResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQueriesResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQueriesResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.AllDocsQueriesResult
      :canonical: ibmcloudant.cloudant_v1.AllDocsQueriesResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQueriesResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.AllDocsQueriesResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQueriesResult.to_dict
         :parser: myst

.. py:class:: AllDocsQuery(*, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[str] = None, key: typing.Optional[str] = None, keys: typing.Optional[typing.List[str]] = None, start_key: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.AllDocsQuery

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQuery
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQuery.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.AllDocsQuery
      :canonical: ibmcloudant.cloudant_v1.AllDocsQuery.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQuery.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.AllDocsQuery.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsQuery.to_dict
         :parser: myst

.. py:class:: AllDocsResult(total_rows: int, rows: typing.List[ibmcloudant.cloudant_v1.DocsResultRow], *, update_seq: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.AllDocsResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.AllDocsResult
      :canonical: ibmcloudant.cloudant_v1.AllDocsResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.AllDocsResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AllDocsResult.to_dict
         :parser: myst

.. py:class:: Analyzer(*, name: typing.Optional[str] = None, stopwords: typing.Optional[typing.List[str]] = None)
   :canonical: ibmcloudant.cloudant_v1.Analyzer

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.__init__
      :parser: myst

   .. py:class:: NameEnum()
      :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.__init__
         :parser: myst

      .. py:attribute:: ARABIC
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ARABIC
         :value: 'arabic'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ARABIC
            :parser: myst

      .. py:attribute:: ARMENIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ARMENIAN
         :value: 'armenian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ARMENIAN
            :parser: myst

      .. py:attribute:: BASQUE
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.BASQUE
         :value: 'basque'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.BASQUE
            :parser: myst

      .. py:attribute:: BRAZILIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.BRAZILIAN
         :value: 'brazilian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.BRAZILIAN
            :parser: myst

      .. py:attribute:: BULGARIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.BULGARIAN
         :value: 'bulgarian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.BULGARIAN
            :parser: myst

      .. py:attribute:: CATALAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CATALAN
         :value: 'catalan'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CATALAN
            :parser: myst

      .. py:attribute:: CHINESE
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CHINESE
         :value: 'chinese'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CHINESE
            :parser: myst

      .. py:attribute:: CJK
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CJK
         :value: 'cjk'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CJK
            :parser: myst

      .. py:attribute:: CLASSIC
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CLASSIC
         :value: 'classic'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CLASSIC
            :parser: myst

      .. py:attribute:: CZECH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CZECH
         :value: 'czech'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.CZECH
            :parser: myst

      .. py:attribute:: DANISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.DANISH
         :value: 'danish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.DANISH
            :parser: myst

      .. py:attribute:: DUTCH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.DUTCH
         :value: 'dutch'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.DUTCH
            :parser: myst

      .. py:attribute:: EMAIL
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.EMAIL
         :value: 'email'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.EMAIL
            :parser: myst

      .. py:attribute:: ENGLISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ENGLISH
         :value: 'english'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ENGLISH
            :parser: myst

      .. py:attribute:: FINNISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.FINNISH
         :value: 'finnish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.FINNISH
            :parser: myst

      .. py:attribute:: FRENCH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.FRENCH
         :value: 'french'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.FRENCH
            :parser: myst

      .. py:attribute:: GALICIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.GALICIAN
         :value: 'galician'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.GALICIAN
            :parser: myst

      .. py:attribute:: GERMAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.GERMAN
         :value: 'german'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.GERMAN
            :parser: myst

      .. py:attribute:: GREEK
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.GREEK
         :value: 'greek'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.GREEK
            :parser: myst

      .. py:attribute:: HINDI
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.HINDI
         :value: 'hindi'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.HINDI
            :parser: myst

      .. py:attribute:: HUNGARIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.HUNGARIAN
         :value: 'hungarian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.HUNGARIAN
            :parser: myst

      .. py:attribute:: INDONESIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.INDONESIAN
         :value: 'indonesian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.INDONESIAN
            :parser: myst

      .. py:attribute:: IRISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.IRISH
         :value: 'irish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.IRISH
            :parser: myst

      .. py:attribute:: ITALIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ITALIAN
         :value: 'italian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ITALIAN
            :parser: myst

      .. py:attribute:: JAPANESE
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.JAPANESE
         :value: 'japanese'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.JAPANESE
            :parser: myst

      .. py:attribute:: KEYWORD
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.KEYWORD
         :value: 'keyword'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.KEYWORD
            :parser: myst

      .. py:attribute:: LATVIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.LATVIAN
         :value: 'latvian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.LATVIAN
            :parser: myst

      .. py:attribute:: NORWEGIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.NORWEGIAN
         :value: 'norwegian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.NORWEGIAN
            :parser: myst

      .. py:attribute:: PERFIELD
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.PERFIELD
         :value: 'perfield'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.PERFIELD
            :parser: myst

      .. py:attribute:: PERSIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.PERSIAN
         :value: 'persian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.PERSIAN
            :parser: myst

      .. py:attribute:: POLISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.POLISH
         :value: 'polish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.POLISH
            :parser: myst

      .. py:attribute:: PORTUGUESE
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.PORTUGUESE
         :value: 'portuguese'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.PORTUGUESE
            :parser: myst

      .. py:attribute:: ROMANIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ROMANIAN
         :value: 'romanian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.ROMANIAN
            :parser: myst

      .. py:attribute:: RUSSIAN
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.RUSSIAN
         :value: 'russian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.RUSSIAN
            :parser: myst

      .. py:attribute:: SIMPLE
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.SIMPLE
         :value: 'simple'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.SIMPLE
            :parser: myst

      .. py:attribute:: SPANISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.SPANISH
         :value: 'spanish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.SPANISH
            :parser: myst

      .. py:attribute:: STANDARD
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.STANDARD
         :value: 'standard'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.STANDARD
            :parser: myst

      .. py:attribute:: SWEDISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.SWEDISH
         :value: 'swedish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.SWEDISH
            :parser: myst

      .. py:attribute:: THAI
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.THAI
         :value: 'thai'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.THAI
            :parser: myst

      .. py:attribute:: TURKISH
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.TURKISH
         :value: 'turkish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.TURKISH
            :parser: myst

      .. py:attribute:: WHITESPACE
         :canonical: ibmcloudant.cloudant_v1.Analyzer.NameEnum.WHITESPACE
         :value: 'whitespace'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.NameEnum.WHITESPACE
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.Analyzer
      :canonical: ibmcloudant.cloudant_v1.Analyzer.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Analyzer.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Analyzer.to_dict
         :parser: myst

.. py:class:: AnalyzerConfiguration(*, name: typing.Optional[str] = None, stopwords: typing.Optional[typing.List[str]] = None, fields: typing.Optional[dict] = None)
   :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.__init__
      :parser: myst

   .. py:class:: NameEnum()
      :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.__init__
         :parser: myst

      .. py:attribute:: ARABIC
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ARABIC
         :value: 'arabic'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ARABIC
            :parser: myst

      .. py:attribute:: ARMENIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ARMENIAN
         :value: 'armenian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ARMENIAN
            :parser: myst

      .. py:attribute:: BASQUE
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.BASQUE
         :value: 'basque'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.BASQUE
            :parser: myst

      .. py:attribute:: BRAZILIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.BRAZILIAN
         :value: 'brazilian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.BRAZILIAN
            :parser: myst

      .. py:attribute:: BULGARIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.BULGARIAN
         :value: 'bulgarian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.BULGARIAN
            :parser: myst

      .. py:attribute:: CATALAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CATALAN
         :value: 'catalan'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CATALAN
            :parser: myst

      .. py:attribute:: CHINESE
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CHINESE
         :value: 'chinese'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CHINESE
            :parser: myst

      .. py:attribute:: CJK
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CJK
         :value: 'cjk'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CJK
            :parser: myst

      .. py:attribute:: CLASSIC
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CLASSIC
         :value: 'classic'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CLASSIC
            :parser: myst

      .. py:attribute:: CZECH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CZECH
         :value: 'czech'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.CZECH
            :parser: myst

      .. py:attribute:: DANISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.DANISH
         :value: 'danish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.DANISH
            :parser: myst

      .. py:attribute:: DUTCH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.DUTCH
         :value: 'dutch'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.DUTCH
            :parser: myst

      .. py:attribute:: EMAIL
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.EMAIL
         :value: 'email'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.EMAIL
            :parser: myst

      .. py:attribute:: ENGLISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ENGLISH
         :value: 'english'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ENGLISH
            :parser: myst

      .. py:attribute:: FINNISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.FINNISH
         :value: 'finnish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.FINNISH
            :parser: myst

      .. py:attribute:: FRENCH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.FRENCH
         :value: 'french'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.FRENCH
            :parser: myst

      .. py:attribute:: GALICIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.GALICIAN
         :value: 'galician'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.GALICIAN
            :parser: myst

      .. py:attribute:: GERMAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.GERMAN
         :value: 'german'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.GERMAN
            :parser: myst

      .. py:attribute:: GREEK
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.GREEK
         :value: 'greek'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.GREEK
            :parser: myst

      .. py:attribute:: HINDI
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.HINDI
         :value: 'hindi'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.HINDI
            :parser: myst

      .. py:attribute:: HUNGARIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.HUNGARIAN
         :value: 'hungarian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.HUNGARIAN
            :parser: myst

      .. py:attribute:: INDONESIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.INDONESIAN
         :value: 'indonesian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.INDONESIAN
            :parser: myst

      .. py:attribute:: IRISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.IRISH
         :value: 'irish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.IRISH
            :parser: myst

      .. py:attribute:: ITALIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ITALIAN
         :value: 'italian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ITALIAN
            :parser: myst

      .. py:attribute:: JAPANESE
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.JAPANESE
         :value: 'japanese'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.JAPANESE
            :parser: myst

      .. py:attribute:: KEYWORD
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.KEYWORD
         :value: 'keyword'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.KEYWORD
            :parser: myst

      .. py:attribute:: LATVIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.LATVIAN
         :value: 'latvian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.LATVIAN
            :parser: myst

      .. py:attribute:: NORWEGIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.NORWEGIAN
         :value: 'norwegian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.NORWEGIAN
            :parser: myst

      .. py:attribute:: PERFIELD
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.PERFIELD
         :value: 'perfield'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.PERFIELD
            :parser: myst

      .. py:attribute:: PERSIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.PERSIAN
         :value: 'persian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.PERSIAN
            :parser: myst

      .. py:attribute:: POLISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.POLISH
         :value: 'polish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.POLISH
            :parser: myst

      .. py:attribute:: PORTUGUESE
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.PORTUGUESE
         :value: 'portuguese'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.PORTUGUESE
            :parser: myst

      .. py:attribute:: ROMANIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ROMANIAN
         :value: 'romanian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.ROMANIAN
            :parser: myst

      .. py:attribute:: RUSSIAN
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.RUSSIAN
         :value: 'russian'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.RUSSIAN
            :parser: myst

      .. py:attribute:: SIMPLE
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.SIMPLE
         :value: 'simple'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.SIMPLE
            :parser: myst

      .. py:attribute:: SPANISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.SPANISH
         :value: 'spanish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.SPANISH
            :parser: myst

      .. py:attribute:: STANDARD
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.STANDARD
         :value: 'standard'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.STANDARD
            :parser: myst

      .. py:attribute:: SWEDISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.SWEDISH
         :value: 'swedish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.SWEDISH
            :parser: myst

      .. py:attribute:: THAI
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.THAI
         :value: 'thai'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.THAI
            :parser: myst

      .. py:attribute:: TURKISH
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.TURKISH
         :value: 'turkish'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.TURKISH
            :parser: myst

      .. py:attribute:: WHITESPACE
         :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.WHITESPACE
         :value: 'whitespace'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.NameEnum.WHITESPACE
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.AnalyzerConfiguration
      :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.AnalyzerConfiguration.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.AnalyzerConfiguration.to_dict
         :parser: myst

.. py:class:: ApiKeysResult(ok: bool, key: str, password: str)
   :canonical: ibmcloudant.cloudant_v1.ApiKeysResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ApiKeysResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ApiKeysResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ApiKeysResult
      :canonical: ibmcloudant.cloudant_v1.ApiKeysResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ApiKeysResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ApiKeysResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ApiKeysResult.to_dict
         :parser: myst

.. py:class:: Attachment(*, content_type: typing.Optional[str] = None, data: typing.Optional[bytes] = None, digest: typing.Optional[str] = None, encoded_length: typing.Optional[int] = None, encoding: typing.Optional[str] = None, follows: typing.Optional[bool] = None, length: typing.Optional[int] = None, revpos: typing.Optional[int] = None, stub: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.Attachment

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Attachment
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Attachment.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.Attachment
      :canonical: ibmcloudant.cloudant_v1.Attachment.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Attachment.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Attachment.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Attachment.to_dict
         :parser: myst

.. py:class:: BulkDocs(docs: typing.List[ibmcloudant.cloudant_v1.Document], *, new_edits: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.BulkDocs

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkDocs
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkDocs.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.BulkDocs
      :canonical: ibmcloudant.cloudant_v1.BulkDocs.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkDocs.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.BulkDocs.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkDocs.to_dict
         :parser: myst

.. py:class:: BulkGetQueryDocument(id: str, *, atts_since: typing.Optional[typing.List[str]] = None, rev: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.BulkGetQueryDocument

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetQueryDocument
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetQueryDocument.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.BulkGetQueryDocument
      :canonical: ibmcloudant.cloudant_v1.BulkGetQueryDocument.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetQueryDocument.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.BulkGetQueryDocument.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetQueryDocument.to_dict
         :parser: myst

.. py:class:: BulkGetResult(results: typing.List[ibmcloudant.cloudant_v1.BulkGetResultItem])
   :canonical: ibmcloudant.cloudant_v1.BulkGetResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.BulkGetResult
      :canonical: ibmcloudant.cloudant_v1.BulkGetResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.BulkGetResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResult.to_dict
         :parser: myst

.. py:class:: BulkGetResultDocument(*, error: typing.Optional[ibmcloudant.cloudant_v1.DocumentResult] = None, ok: typing.Optional[ibmcloudant.cloudant_v1.Document] = None)
   :canonical: ibmcloudant.cloudant_v1.BulkGetResultDocument

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultDocument
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultDocument.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.BulkGetResultDocument
      :canonical: ibmcloudant.cloudant_v1.BulkGetResultDocument.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultDocument.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.BulkGetResultDocument.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultDocument.to_dict
         :parser: myst

.. py:class:: BulkGetResultItem(docs: typing.List[ibmcloudant.cloudant_v1.BulkGetResultDocument], id: str)
   :canonical: ibmcloudant.cloudant_v1.BulkGetResultItem

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultItem
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultItem.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.BulkGetResultItem
      :canonical: ibmcloudant.cloudant_v1.BulkGetResultItem.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultItem.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.BulkGetResultItem.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.BulkGetResultItem.to_dict
         :parser: myst

.. py:class:: CapacityThroughputInformation(current: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent, *, target: typing.Optional[ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget] = None)
   :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.CapacityThroughputInformation
      :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformation.to_dict
         :parser: myst

.. py:class:: CapacityThroughputInformationCurrent(throughput: ibmcloudant.cloudant_v1.ThroughputInformation)
   :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent
      :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationCurrent.to_dict
         :parser: myst

.. py:class:: CapacityThroughputInformationTarget(throughput: ibmcloudant.cloudant_v1.ThroughputInformation)
   :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget
      :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CapacityThroughputInformationTarget.to_dict
         :parser: myst

.. py:class:: Change(rev: str)
   :canonical: ibmcloudant.cloudant_v1.Change

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Change
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Change.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.Change
      :canonical: ibmcloudant.cloudant_v1.Change.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Change.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Change.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Change.to_dict
         :parser: myst

.. py:class:: ChangesResult(last_seq: str, pending: int, results: typing.List[ibmcloudant.cloudant_v1.ChangesResultItem])
   :canonical: ibmcloudant.cloudant_v1.ChangesResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ChangesResult
      :canonical: ibmcloudant.cloudant_v1.ChangesResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ChangesResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResult.to_dict
         :parser: myst

.. py:class:: ChangesResultItem(changes: typing.List[ibmcloudant.cloudant_v1.Change], id: str, seq: str, *, deleted: typing.Optional[bool] = None, doc: typing.Optional[ibmcloudant.cloudant_v1.Document] = None)
   :canonical: ibmcloudant.cloudant_v1.ChangesResultItem

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResultItem
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResultItem.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ChangesResultItem
      :canonical: ibmcloudant.cloudant_v1.ChangesResultItem.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResultItem.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ChangesResultItem.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ChangesResultItem.to_dict
         :parser: myst

.. py:class:: CloudantV1(authenticator: ibm_cloud_sdk_core.authenticators.authenticator.Authenticator = None)
   :canonical: ibmcloudant.cloudant_v1.CloudantV1

   Bases: :py:obj:`ibm_cloud_sdk_core.BaseService`

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.__init__
      :parser: myst

   .. py:attribute:: DEFAULT_SERVICE_NAME
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.DEFAULT_SERVICE_NAME
      :value: 'cloudant'

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.DEFAULT_SERVICE_NAME
         :parser: myst

   .. py:attribute:: DEFAULT_SERVICE_URL
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.DEFAULT_SERVICE_URL
      :value: 'http://localhost:5984'

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.DEFAULT_SERVICE_URL
         :parser: myst

   .. py:method:: delete_attachment(db: str, doc_id: str, attachment_name: str, *, if_match: typing.Optional[str] = None, rev: typing.Optional[str] = None, batch: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.delete_attachment

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.delete_attachment
         :parser: myst

   .. py:method:: delete_database(db: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.delete_database

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.delete_database
         :parser: myst

   .. py:method:: delete_design_document(db: str, ddoc: str, *, if_match: typing.Optional[str] = None, batch: typing.Optional[str] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.delete_design_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.delete_design_document
         :parser: myst

   .. py:method:: delete_document(db: str, doc_id: str, *, if_match: typing.Optional[str] = None, batch: typing.Optional[str] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.delete_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.delete_document
         :parser: myst

   .. py:method:: delete_index(db: str, ddoc: str, type: str, index: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.delete_index

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.delete_index
         :parser: myst

   .. py:method:: delete_local_document(db: str, doc_id: str, *, batch: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.delete_local_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.delete_local_document
         :parser: myst

   .. py:method:: delete_replication_document(doc_id: str, *, if_match: typing.Optional[str] = None, batch: typing.Optional[str] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.delete_replication_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.delete_replication_document
         :parser: myst

   .. py:method:: get_active_tasks(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_active_tasks

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_active_tasks
         :parser: myst

   .. py:method:: get_activity_tracker_events(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_activity_tracker_events

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_activity_tracker_events
         :parser: myst

   .. py:method:: get_all_dbs(*, descending: typing.Optional[bool] = None, end_key: typing.Optional[str] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, start_key: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_all_dbs

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_all_dbs
         :parser: myst

   .. py:method:: get_attachment(db: str, doc_id: str, attachment_name: str, *, if_match: typing.Optional[str] = None, if_none_match: typing.Optional[str] = None, range: typing.Optional[str] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_attachment

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_attachment
         :parser: myst

   .. py:method:: get_capacity_throughput_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_capacity_throughput_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_capacity_throughput_information
         :parser: myst

   .. py:method:: get_cors_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_cors_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_cors_information
         :parser: myst

   .. py:method:: get_current_throughput_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_current_throughput_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_current_throughput_information
         :parser: myst

   .. py:method:: get_database_information(db: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_database_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_database_information
         :parser: myst

   .. py:method:: get_db_updates(*, descending: typing.Optional[bool] = None, feed: typing.Optional[str] = None, heartbeat: typing.Optional[int] = None, limit: typing.Optional[int] = None, timeout: typing.Optional[int] = None, since: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_db_updates

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_db_updates
         :parser: myst

   .. py:method:: get_design_document(db: str, ddoc: str, *, if_none_match: typing.Optional[str] = None, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, deleted_conflicts: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, local_seq: typing.Optional[bool] = None, meta: typing.Optional[bool] = None, rev: typing.Optional[str] = None, revs: typing.Optional[bool] = None, revs_info: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_design_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_design_document
         :parser: myst

   .. py:method:: get_design_document_information(db: str, ddoc: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_design_document_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_design_document_information
         :parser: myst

   .. py:method:: get_document(db: str, doc_id: str, *, if_none_match: typing.Optional[str] = None, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, deleted_conflicts: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, local_seq: typing.Optional[bool] = None, meta: typing.Optional[bool] = None, rev: typing.Optional[str] = None, revs: typing.Optional[bool] = None, revs_info: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_document
         :parser: myst

   .. py:method:: get_document_as_mixed(db: str, doc_id: str, *, if_none_match: typing.Optional[str] = None, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, deleted_conflicts: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, local_seq: typing.Optional[bool] = None, meta: typing.Optional[bool] = None, rev: typing.Optional[str] = None, revs: typing.Optional[bool] = None, revs_info: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_document_as_mixed

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_document_as_mixed
         :parser: myst

   .. py:method:: get_document_as_related(db: str, doc_id: str, *, if_none_match: typing.Optional[str] = None, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, deleted_conflicts: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, local_seq: typing.Optional[bool] = None, meta: typing.Optional[bool] = None, rev: typing.Optional[str] = None, revs: typing.Optional[bool] = None, revs_info: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_document_as_related

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_document_as_related
         :parser: myst

   .. py:method:: get_document_as_stream(db: str, doc_id: str, *, if_none_match: typing.Optional[str] = None, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, deleted_conflicts: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, local_seq: typing.Optional[bool] = None, meta: typing.Optional[bool] = None, rev: typing.Optional[str] = None, revs: typing.Optional[bool] = None, revs_info: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_document_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_document_as_stream
         :parser: myst

   .. py:method:: get_document_shards_info(db: str, doc_id: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_document_shards_info

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_document_shards_info
         :parser: myst

   .. py:method:: get_indexes_information(db: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_indexes_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_indexes_information
         :parser: myst

   .. py:method:: get_local_document(db: str, doc_id: str, *, accept: typing.Optional[str] = None, if_none_match: typing.Optional[str] = None, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, local_seq: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_local_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_local_document
         :parser: myst

   .. py:method:: get_membership_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_membership_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_membership_information
         :parser: myst

   .. py:method:: get_partition_information(db: str, partition_key: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_partition_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_partition_information
         :parser: myst

   .. py:method:: get_replication_document(doc_id: str, *, if_none_match: typing.Optional[str] = None, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, deleted_conflicts: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, local_seq: typing.Optional[bool] = None, meta: typing.Optional[bool] = None, rev: typing.Optional[str] = None, revs: typing.Optional[bool] = None, revs_info: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_replication_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_replication_document
         :parser: myst

   .. py:method:: get_scheduler_docs(*, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, states: typing.Optional[typing.List[str]] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_docs

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_docs
         :parser: myst

   .. py:method:: get_scheduler_document(doc_id: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_document
         :parser: myst

   .. py:method:: get_scheduler_job(job_id: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_job

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_job
         :parser: myst

   .. py:method:: get_scheduler_jobs(*, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_jobs

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_scheduler_jobs
         :parser: myst

   .. py:method:: get_search_info(db: str, ddoc: str, index: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_search_info

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_search_info
         :parser: myst

   .. py:method:: get_security(db: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_security

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_security
         :parser: myst

   .. py:method:: get_server_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_server_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_server_information
         :parser: myst

   .. py:method:: get_session_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_session_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_session_information
         :parser: myst

   .. py:method:: get_shards_information(db: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_shards_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_shards_information
         :parser: myst

   .. py:method:: get_up_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_up_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_up_information
         :parser: myst

   .. py:method:: get_uuids(*, count: typing.Optional[int] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.get_uuids

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.get_uuids
         :parser: myst

   .. py:method:: head_attachment(db: str, doc_id: str, attachment_name: str, *, if_match: typing.Optional[str] = None, if_none_match: typing.Optional[str] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_attachment

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_attachment
         :parser: myst

   .. py:method:: head_database(db: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_database

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_database
         :parser: myst

   .. py:method:: head_design_document(db: str, ddoc: str, *, if_none_match: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_design_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_design_document
         :parser: myst

   .. py:method:: head_document(db: str, doc_id: str, *, if_none_match: typing.Optional[str] = None, latest: typing.Optional[bool] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_document
         :parser: myst

   .. py:method:: head_local_document(db: str, doc_id: str, *, if_none_match: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_local_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_local_document
         :parser: myst

   .. py:method:: head_replication_document(doc_id: str, *, if_none_match: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_replication_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_replication_document
         :parser: myst

   .. py:method:: head_scheduler_document(doc_id: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_scheduler_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_scheduler_document
         :parser: myst

   .. py:method:: head_scheduler_job(job_id: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_scheduler_job

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_scheduler_job
         :parser: myst

   .. py:method:: head_up_information(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.head_up_information

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.head_up_information
         :parser: myst

   .. py:method:: new_instance(service_name: str = DEFAULT_SERVICE_NAME) -> ibmcloudant.cloudant_v1.CloudantV1
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.new_instance
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.new_instance
         :parser: myst

   .. py:method:: post_activity_tracker_events(types: typing.List[str], **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_activity_tracker_events

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_activity_tracker_events
         :parser: myst

   .. py:method:: post_all_docs(db: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[str] = None, key: typing.Optional[str] = None, keys: typing.Optional[typing.List[str]] = None, start_key: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs
         :parser: myst

   .. py:method:: post_all_docs_as_stream(db: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[str] = None, key: typing.Optional[str] = None, keys: typing.Optional[typing.List[str]] = None, start_key: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs_as_stream
         :parser: myst

   .. py:method:: post_all_docs_queries(db: str, queries: typing.List[ibmcloudant.cloudant_v1.AllDocsQuery], **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs_queries

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs_queries
         :parser: myst

   .. py:method:: post_all_docs_queries_as_stream(db: str, queries: typing.List[ibmcloudant.cloudant_v1.AllDocsQuery], **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs_queries_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_all_docs_queries_as_stream
         :parser: myst

   .. py:method:: post_api_keys(**kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_api_keys

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_api_keys
         :parser: myst

   .. py:method:: post_bulk_docs(db: str, bulk_docs: typing.Union[ibmcloudant.cloudant_v1.BulkDocs, typing.BinaryIO], **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_docs

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_docs
         :parser: myst

   .. py:method:: post_bulk_get(db: str, docs: typing.List[ibmcloudant.cloudant_v1.BulkGetQueryDocument], *, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, revs: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get
         :parser: myst

   .. py:method:: post_bulk_get_as_mixed(db: str, docs: typing.List[ibmcloudant.cloudant_v1.BulkGetQueryDocument], *, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, revs: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get_as_mixed

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get_as_mixed
         :parser: myst

   .. py:method:: post_bulk_get_as_related(db: str, docs: typing.List[ibmcloudant.cloudant_v1.BulkGetQueryDocument], *, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, revs: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get_as_related

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get_as_related
         :parser: myst

   .. py:method:: post_bulk_get_as_stream(db: str, docs: typing.List[ibmcloudant.cloudant_v1.BulkGetQueryDocument], *, attachments: typing.Optional[bool] = None, att_encoding_info: typing.Optional[bool] = None, latest: typing.Optional[bool] = None, revs: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_bulk_get_as_stream
         :parser: myst

   .. py:method:: post_changes(db: str, *, doc_ids: typing.Optional[typing.List[str]] = None, fields: typing.Optional[typing.List[str]] = None, selector: typing.Optional[dict] = None, last_event_id: typing.Optional[str] = None, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, feed: typing.Optional[str] = None, filter: typing.Optional[str] = None, heartbeat: typing.Optional[int] = None, include_docs: typing.Optional[bool] = None, limit: typing.Optional[int] = None, seq_interval: typing.Optional[int] = None, since: typing.Optional[str] = None, style: typing.Optional[str] = None, timeout: typing.Optional[int] = None, view: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_changes

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_changes
         :parser: myst

   .. py:method:: post_changes_as_stream(db: str, *, doc_ids: typing.Optional[typing.List[str]] = None, fields: typing.Optional[typing.List[str]] = None, selector: typing.Optional[dict] = None, last_event_id: typing.Optional[str] = None, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, feed: typing.Optional[str] = None, filter: typing.Optional[str] = None, heartbeat: typing.Optional[int] = None, include_docs: typing.Optional[bool] = None, limit: typing.Optional[int] = None, seq_interval: typing.Optional[int] = None, since: typing.Optional[str] = None, style: typing.Optional[str] = None, timeout: typing.Optional[int] = None, view: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_changes_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_changes_as_stream
         :parser: myst

   .. py:method:: post_dbs_info(keys: typing.List[str], **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_dbs_info

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_dbs_info
         :parser: myst

   .. py:method:: post_design_docs(db: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[str] = None, key: typing.Optional[str] = None, keys: typing.Optional[typing.List[str]] = None, start_key: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_design_docs

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_design_docs
         :parser: myst

   .. py:method:: post_design_docs_queries(db: str, queries: typing.List[ibmcloudant.cloudant_v1.AllDocsQuery], *, accept: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_design_docs_queries

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_design_docs_queries
         :parser: myst

   .. py:method:: post_document(db: str, document: typing.Union[ibmcloudant.cloudant_v1.Document, typing.BinaryIO], *, content_type: typing.Optional[str] = None, batch: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_document
         :parser: myst

   .. py:method:: post_explain(db: str, selector: dict, *, bookmark: typing.Optional[str] = None, conflicts: typing.Optional[bool] = None, execution_stats: typing.Optional[bool] = None, fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, sort: typing.Optional[typing.List[dict]] = None, stable: typing.Optional[bool] = None, update: typing.Optional[str] = None, use_index: typing.Optional[typing.List[str]] = None, r: typing.Optional[int] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_explain

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_explain
         :parser: myst

   .. py:method:: post_find(db: str, selector: dict, *, bookmark: typing.Optional[str] = None, conflicts: typing.Optional[bool] = None, execution_stats: typing.Optional[bool] = None, fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, sort: typing.Optional[typing.List[dict]] = None, stable: typing.Optional[bool] = None, update: typing.Optional[str] = None, use_index: typing.Optional[typing.List[str]] = None, r: typing.Optional[int] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_find

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_find
         :parser: myst

   .. py:method:: post_find_as_stream(db: str, selector: dict, *, bookmark: typing.Optional[str] = None, conflicts: typing.Optional[bool] = None, execution_stats: typing.Optional[bool] = None, fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, sort: typing.Optional[typing.List[dict]] = None, stable: typing.Optional[bool] = None, update: typing.Optional[str] = None, use_index: typing.Optional[typing.List[str]] = None, r: typing.Optional[int] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_find_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_find_as_stream
         :parser: myst

   .. py:method:: post_index(db: str, index: ibmcloudant.cloudant_v1.IndexDefinition, *, ddoc: typing.Optional[str] = None, name: typing.Optional[str] = None, partitioned: typing.Optional[bool] = None, type: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_index

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_index
         :parser: myst

   .. py:method:: post_partition_all_docs(db: str, partition_key: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[str] = None, key: typing.Optional[str] = None, keys: typing.Optional[typing.List[str]] = None, start_key: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_all_docs

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_all_docs
         :parser: myst

   .. py:method:: post_partition_all_docs_as_stream(db: str, partition_key: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[str] = None, key: typing.Optional[str] = None, keys: typing.Optional[typing.List[str]] = None, start_key: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_all_docs_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_all_docs_as_stream
         :parser: myst

   .. py:method:: post_partition_explain(db: str, partition_key: str, selector: dict, *, bookmark: typing.Optional[str] = None, conflicts: typing.Optional[bool] = None, execution_stats: typing.Optional[bool] = None, fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, sort: typing.Optional[typing.List[dict]] = None, stable: typing.Optional[bool] = None, update: typing.Optional[str] = None, use_index: typing.Optional[typing.List[str]] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_explain

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_explain
         :parser: myst

   .. py:method:: post_partition_find(db: str, partition_key: str, selector: dict, *, bookmark: typing.Optional[str] = None, conflicts: typing.Optional[bool] = None, execution_stats: typing.Optional[bool] = None, fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, sort: typing.Optional[typing.List[dict]] = None, stable: typing.Optional[bool] = None, update: typing.Optional[str] = None, use_index: typing.Optional[typing.List[str]] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_find

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_find
         :parser: myst

   .. py:method:: post_partition_find_as_stream(db: str, partition_key: str, selector: dict, *, bookmark: typing.Optional[str] = None, conflicts: typing.Optional[bool] = None, execution_stats: typing.Optional[bool] = None, fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, sort: typing.Optional[typing.List[dict]] = None, stable: typing.Optional[bool] = None, update: typing.Optional[str] = None, use_index: typing.Optional[typing.List[str]] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_find_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_find_as_stream
         :parser: myst

   .. py:method:: post_partition_search(db: str, partition_key: str, ddoc: str, index: str, query: str, *, bookmark: typing.Optional[str] = None, highlight_fields: typing.Optional[typing.List[str]] = None, highlight_number: typing.Optional[int] = None, highlight_post_tag: typing.Optional[str] = None, highlight_pre_tag: typing.Optional[str] = None, highlight_size: typing.Optional[int] = None, include_docs: typing.Optional[bool] = None, include_fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, sort: typing.Optional[typing.List[str]] = None, stale: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_search

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_search
         :parser: myst

   .. py:method:: post_partition_search_as_stream(db: str, partition_key: str, ddoc: str, index: str, query: str, *, bookmark: typing.Optional[str] = None, highlight_fields: typing.Optional[typing.List[str]] = None, highlight_number: typing.Optional[int] = None, highlight_post_tag: typing.Optional[str] = None, highlight_pre_tag: typing.Optional[str] = None, highlight_size: typing.Optional[int] = None, include_docs: typing.Optional[bool] = None, include_fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, sort: typing.Optional[typing.List[str]] = None, stale: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_search_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_search_as_stream
         :parser: myst

   .. py:method:: post_partition_view(db: str, partition_key: str, ddoc: str, view: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[object] = None, end_key_doc_id: typing.Optional[str] = None, group: typing.Optional[bool] = None, group_level: typing.Optional[int] = None, key: typing.Optional[object] = None, keys: typing.Optional[typing.List[object]] = None, reduce: typing.Optional[bool] = None, start_key: typing.Optional[object] = None, start_key_doc_id: typing.Optional[str] = None, update: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_view

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_view
         :parser: myst

   .. py:method:: post_partition_view_as_stream(db: str, partition_key: str, ddoc: str, view: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[object] = None, end_key_doc_id: typing.Optional[str] = None, group: typing.Optional[bool] = None, group_level: typing.Optional[int] = None, key: typing.Optional[object] = None, keys: typing.Optional[typing.List[object]] = None, reduce: typing.Optional[bool] = None, start_key: typing.Optional[object] = None, start_key_doc_id: typing.Optional[str] = None, update: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_partition_view_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_partition_view_as_stream
         :parser: myst

   .. py:method:: post_revs_diff(db: str, document_revisions: dict, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_revs_diff

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_revs_diff
         :parser: myst

   .. py:method:: post_search(db: str, ddoc: str, index: str, query: str, *, bookmark: typing.Optional[str] = None, highlight_fields: typing.Optional[typing.List[str]] = None, highlight_number: typing.Optional[int] = None, highlight_post_tag: typing.Optional[str] = None, highlight_pre_tag: typing.Optional[str] = None, highlight_size: typing.Optional[int] = None, include_docs: typing.Optional[bool] = None, include_fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, sort: typing.Optional[typing.List[str]] = None, stale: typing.Optional[str] = None, counts: typing.Optional[typing.List[str]] = None, drilldown: typing.Optional[typing.List[typing.List[str]]] = None, group_field: typing.Optional[str] = None, group_limit: typing.Optional[int] = None, group_sort: typing.Optional[typing.List[str]] = None, ranges: typing.Optional[dict] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_search

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_search
         :parser: myst

   .. py:method:: post_search_analyze(analyzer: str, text: str, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_search_analyze

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_search_analyze
         :parser: myst

   .. py:method:: post_search_as_stream(db: str, ddoc: str, index: str, query: str, *, bookmark: typing.Optional[str] = None, highlight_fields: typing.Optional[typing.List[str]] = None, highlight_number: typing.Optional[int] = None, highlight_post_tag: typing.Optional[str] = None, highlight_pre_tag: typing.Optional[str] = None, highlight_size: typing.Optional[int] = None, include_docs: typing.Optional[bool] = None, include_fields: typing.Optional[typing.List[str]] = None, limit: typing.Optional[int] = None, sort: typing.Optional[typing.List[str]] = None, stale: typing.Optional[str] = None, counts: typing.Optional[typing.List[str]] = None, drilldown: typing.Optional[typing.List[typing.List[str]]] = None, group_field: typing.Optional[str] = None, group_limit: typing.Optional[int] = None, group_sort: typing.Optional[typing.List[str]] = None, ranges: typing.Optional[dict] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_search_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_search_as_stream
         :parser: myst

   .. py:method:: post_view(db: str, ddoc: str, view: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[object] = None, end_key_doc_id: typing.Optional[str] = None, group: typing.Optional[bool] = None, group_level: typing.Optional[int] = None, key: typing.Optional[object] = None, keys: typing.Optional[typing.List[object]] = None, reduce: typing.Optional[bool] = None, stable: typing.Optional[bool] = None, start_key: typing.Optional[object] = None, start_key_doc_id: typing.Optional[str] = None, update: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_view

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_view
         :parser: myst

   .. py:method:: post_view_as_stream(db: str, ddoc: str, view: str, *, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[object] = None, end_key_doc_id: typing.Optional[str] = None, group: typing.Optional[bool] = None, group_level: typing.Optional[int] = None, key: typing.Optional[object] = None, keys: typing.Optional[typing.List[object]] = None, reduce: typing.Optional[bool] = None, stable: typing.Optional[bool] = None, start_key: typing.Optional[object] = None, start_key_doc_id: typing.Optional[str] = None, update: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_view_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_view_as_stream
         :parser: myst

   .. py:method:: post_view_queries(db: str, ddoc: str, view: str, queries: typing.List[ibmcloudant.cloudant_v1.ViewQuery], **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_view_queries

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_view_queries
         :parser: myst

   .. py:method:: post_view_queries_as_stream(db: str, ddoc: str, view: str, queries: typing.List[ibmcloudant.cloudant_v1.ViewQuery], **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.post_view_queries_as_stream

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.post_view_queries_as_stream
         :parser: myst

   .. py:method:: put_attachment(db: str, doc_id: str, attachment_name: str, attachment: typing.BinaryIO, content_type: str, *, if_match: typing.Optional[str] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_attachment

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_attachment
         :parser: myst

   .. py:method:: put_capacity_throughput_configuration(blocks: int, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_capacity_throughput_configuration

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_capacity_throughput_configuration
         :parser: myst

   .. py:method:: put_cloudant_security_configuration(db: str, cloudant: dict, *, admins: typing.Optional[ibmcloudant.cloudant_v1.SecurityObject] = None, members: typing.Optional[ibmcloudant.cloudant_v1.SecurityObject] = None, couchdb_auth_only: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_cloudant_security_configuration

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_cloudant_security_configuration
         :parser: myst

   .. py:method:: put_cors_configuration(origins: typing.List[str], *, allow_credentials: typing.Optional[bool] = None, enable_cors: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_cors_configuration

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_cors_configuration
         :parser: myst

   .. py:method:: put_database(db: str, *, partitioned: typing.Optional[bool] = None, q: typing.Optional[int] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_database

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_database
         :parser: myst

   .. py:method:: put_design_document(db: str, ddoc: str, design_document: ibmcloudant.cloudant_v1.DesignDocument, *, if_match: typing.Optional[str] = None, batch: typing.Optional[str] = None, new_edits: typing.Optional[bool] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_design_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_design_document
         :parser: myst

   .. py:method:: put_document(db: str, doc_id: str, document: typing.Union[ibmcloudant.cloudant_v1.Document, typing.BinaryIO], *, content_type: typing.Optional[str] = None, if_match: typing.Optional[str] = None, batch: typing.Optional[str] = None, new_edits: typing.Optional[bool] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_document
         :parser: myst

   .. py:method:: put_local_document(db: str, doc_id: str, document: typing.Union[ibmcloudant.cloudant_v1.Document, typing.BinaryIO], *, content_type: typing.Optional[str] = None, batch: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_local_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_local_document
         :parser: myst

   .. py:method:: put_replication_document(doc_id: str, replication_document: ibmcloudant.cloudant_v1.ReplicationDocument, *, if_match: typing.Optional[str] = None, batch: typing.Optional[str] = None, new_edits: typing.Optional[bool] = None, rev: typing.Optional[str] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_replication_document

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_replication_document
         :parser: myst

   .. py:method:: put_security(db: str, *, admins: typing.Optional[ibmcloudant.cloudant_v1.SecurityObject] = None, members: typing.Optional[ibmcloudant.cloudant_v1.SecurityObject] = None, cloudant: typing.Optional[dict] = None, couchdb_auth_only: typing.Optional[bool] = None, **kwargs) -> ibm_cloud_sdk_core.DetailedResponse
      :canonical: ibmcloudant.cloudant_v1.CloudantV1.put_security

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CloudantV1.put_security
         :parser: myst

.. py:class:: ContentInformationSizes(active: int, external: int, file: int)
   :canonical: ibmcloudant.cloudant_v1.ContentInformationSizes

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ContentInformationSizes
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ContentInformationSizes.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ContentInformationSizes
      :canonical: ibmcloudant.cloudant_v1.ContentInformationSizes.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ContentInformationSizes.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ContentInformationSizes.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ContentInformationSizes.to_dict
         :parser: myst

.. py:class:: CorsInformation(allow_credentials: bool, enable_cors: bool, origins: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.CorsInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CorsInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CorsInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.CorsInformation
      :canonical: ibmcloudant.cloudant_v1.CorsInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CorsInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.CorsInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CorsInformation.to_dict
         :parser: myst

.. py:class:: CurrentThroughputInformation(throughput: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput)
   :canonical: ibmcloudant.cloudant_v1.CurrentThroughputInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.CurrentThroughputInformation
      :canonical: ibmcloudant.cloudant_v1.CurrentThroughputInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.CurrentThroughputInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformation.to_dict
         :parser: myst

.. py:class:: CurrentThroughputInformationThroughput(query: int, read: int, write: int)
   :canonical: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput
      :canonical: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.CurrentThroughputInformationThroughput.to_dict
         :parser: myst

.. py:class:: DatabaseInformation(cluster: ibmcloudant.cloudant_v1.DatabaseInformationCluster, compact_running: bool, db_name: str, disk_format_version: int, doc_count: int, doc_del_count: int, instance_start_time: str, props: ibmcloudant.cloudant_v1.DatabaseInformationProps, sizes: ibmcloudant.cloudant_v1.ContentInformationSizes, update_seq: str, *, committed_update_seq: typing.Optional[str] = None, compacted_seq: typing.Optional[str] = None, engine: typing.Optional[str] = None, uuid: typing.Optional[str] = None, partitioned_indexes: typing.Optional[ibmcloudant.cloudant_v1.PartitionedIndexesInformation] = None)
   :canonical: ibmcloudant.cloudant_v1.DatabaseInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DatabaseInformation
      :canonical: ibmcloudant.cloudant_v1.DatabaseInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DatabaseInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformation.to_dict
         :parser: myst

.. py:class:: DatabaseInformationCluster(n: int, q: int, r: int, w: int)
   :canonical: ibmcloudant.cloudant_v1.DatabaseInformationCluster

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationCluster
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationCluster.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DatabaseInformationCluster
      :canonical: ibmcloudant.cloudant_v1.DatabaseInformationCluster.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationCluster.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DatabaseInformationCluster.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationCluster.to_dict
         :parser: myst

.. py:class:: DatabaseInformationProps(*, partitioned: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.DatabaseInformationProps

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationProps
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationProps.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DatabaseInformationProps
      :canonical: ibmcloudant.cloudant_v1.DatabaseInformationProps.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationProps.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DatabaseInformationProps.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DatabaseInformationProps.to_dict
         :parser: myst

.. py:class:: DbEvent(db_name: str, seq: str, type: str)
   :canonical: ibmcloudant.cloudant_v1.DbEvent

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.__init__
      :parser: myst

   .. py:class:: TypeEnum()
      :canonical: ibmcloudant.cloudant_v1.DbEvent.TypeEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.TypeEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.TypeEnum.__init__
         :parser: myst

      .. py:attribute:: CREATED
         :canonical: ibmcloudant.cloudant_v1.DbEvent.TypeEnum.CREATED
         :value: 'created'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.TypeEnum.CREATED
            :parser: myst

      .. py:attribute:: DELETED
         :canonical: ibmcloudant.cloudant_v1.DbEvent.TypeEnum.DELETED
         :value: 'deleted'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.TypeEnum.DELETED
            :parser: myst

      .. py:attribute:: UPDATED
         :canonical: ibmcloudant.cloudant_v1.DbEvent.TypeEnum.UPDATED
         :value: 'updated'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.TypeEnum.UPDATED
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DbEvent
      :canonical: ibmcloudant.cloudant_v1.DbEvent.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DbEvent.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbEvent.to_dict
         :parser: myst

.. py:class:: DbUpdates(last_seq: str, results: typing.List[ibmcloudant.cloudant_v1.DbEvent])
   :canonical: ibmcloudant.cloudant_v1.DbUpdates

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbUpdates
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbUpdates.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DbUpdates
      :canonical: ibmcloudant.cloudant_v1.DbUpdates.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbUpdates.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DbUpdates.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbUpdates.to_dict
         :parser: myst

.. py:class:: DbsInfoResult(key: str, *, error: typing.Optional[str] = None, info: typing.Optional[ibmcloudant.cloudant_v1.DatabaseInformation] = None)
   :canonical: ibmcloudant.cloudant_v1.DbsInfoResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbsInfoResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbsInfoResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DbsInfoResult
      :canonical: ibmcloudant.cloudant_v1.DbsInfoResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbsInfoResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DbsInfoResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DbsInfoResult.to_dict
         :parser: myst

.. py:class:: DeleteAttachmentEnums
   :canonical: ibmcloudant.cloudant_v1.DeleteAttachmentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteAttachmentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.DeleteAttachmentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteAttachmentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteAttachmentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.DeleteAttachmentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteAttachmentEnums.Batch.OK
            :parser: myst

.. py:class:: DeleteDesignDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDesignDocumentEnums.Batch.OK
            :parser: myst

.. py:class:: DeleteDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.DeleteDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.DeleteDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.DeleteDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteDocumentEnums.Batch.OK
            :parser: myst

.. py:class:: DeleteIndexEnums
   :canonical: ibmcloudant.cloudant_v1.DeleteIndexEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteIndexEnums
      :parser: myst

   .. py:class:: Type()
      :canonical: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type.__init__
         :parser: myst

      .. py:attribute:: JSON
         :canonical: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type.JSON
         :value: 'json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type.JSON
            :parser: myst

      .. py:attribute:: SPECIAL
         :canonical: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type.SPECIAL
         :value: 'special'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type.SPECIAL
            :parser: myst

      .. py:attribute:: TEXT
         :canonical: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type.TEXT
         :value: 'text'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteIndexEnums.Type.TEXT
            :parser: myst

.. py:class:: DeleteLocalDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteLocalDocumentEnums.Batch.OK
            :parser: myst

.. py:class:: DeleteReplicationDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DeleteReplicationDocumentEnums.Batch.OK
            :parser: myst

.. py:class:: DesignDocument(*, _attachments: typing.Optional[dict] = None, _conflicts: typing.Optional[typing.List[str]] = None, _deleted: typing.Optional[bool] = None, _deleted_conflicts: typing.Optional[typing.List[str]] = None, _id: typing.Optional[str] = None, _local_seq: typing.Optional[str] = None, _rev: typing.Optional[str] = None, _revisions: typing.Optional[ibmcloudant.cloudant_v1.Revisions] = None, _revs_info: typing.Optional[typing.List[ibmcloudant.cloudant_v1.DocumentRevisionStatus]] = None, autoupdate: typing.Optional[bool] = None, filters: typing.Optional[dict] = None, indexes: typing.Optional[dict] = None, language: typing.Optional[str] = None, options: typing.Optional[ibmcloudant.cloudant_v1.DesignDocumentOptions] = None, validate_doc_update: typing.Optional[str] = None, views: typing.Optional[dict] = None, **kwargs)
   :canonical: ibmcloudant.cloudant_v1.DesignDocument

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocument
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocument.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DesignDocument
      :canonical: ibmcloudant.cloudant_v1.DesignDocument.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocument.from_dict
         :parser: myst

   .. py:method:: get_properties() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DesignDocument.get_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocument.get_properties
         :parser: myst

   .. py:method:: set_properties(_dict: dict)
      :canonical: ibmcloudant.cloudant_v1.DesignDocument.set_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocument.set_properties
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DesignDocument.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocument.to_dict
         :parser: myst

.. py:class:: DesignDocumentInformation(name: str, view_index: ibmcloudant.cloudant_v1.DesignDocumentViewIndex)
   :canonical: ibmcloudant.cloudant_v1.DesignDocumentInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DesignDocumentInformation
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentInformation.to_dict
         :parser: myst

.. py:class:: DesignDocumentOptions(*, partitioned: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.DesignDocumentOptions

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentOptions
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentOptions.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DesignDocumentOptions
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentOptions.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentOptions.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentOptions.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentOptions.to_dict
         :parser: myst

.. py:class:: DesignDocumentViewIndex(collator_versions: typing.List[str], compact_running: bool, language: str, signature: str, sizes: ibmcloudant.cloudant_v1.ContentInformationSizes, updater_running: bool, updates_pending: ibmcloudant.cloudant_v1.UpdatesPending, waiting_clients: int, waiting_commit: bool)
   :canonical: ibmcloudant.cloudant_v1.DesignDocumentViewIndex

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewIndex
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewIndex.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DesignDocumentViewIndex
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentViewIndex.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewIndex.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentViewIndex.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewIndex.to_dict
         :parser: myst

.. py:class:: DesignDocumentViewsMapReduce(map: str, *, reduce: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DesignDocumentViewsMapReduce.to_dict
         :parser: myst

.. py:class:: DocsResultRow(key: str, *, caused_by: typing.Optional[str] = None, error: typing.Optional[str] = None, reason: typing.Optional[str] = None, ref: typing.Optional[int] = None, doc: typing.Optional[ibmcloudant.cloudant_v1.Document] = None, id: typing.Optional[str] = None, value: typing.Optional[ibmcloudant.cloudant_v1.DocsResultRowValue] = None)
   :canonical: ibmcloudant.cloudant_v1.DocsResultRow

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRow
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRow.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DocsResultRow
      :canonical: ibmcloudant.cloudant_v1.DocsResultRow.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRow.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DocsResultRow.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRow.to_dict
         :parser: myst

.. py:class:: DocsResultRowValue(rev: str, *, deleted: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.DocsResultRowValue

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRowValue
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRowValue.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DocsResultRowValue
      :canonical: ibmcloudant.cloudant_v1.DocsResultRowValue.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRowValue.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DocsResultRowValue.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocsResultRowValue.to_dict
         :parser: myst

.. py:class:: Document(*, _attachments: typing.Optional[dict] = None, _conflicts: typing.Optional[typing.List[str]] = None, _deleted: typing.Optional[bool] = None, _deleted_conflicts: typing.Optional[typing.List[str]] = None, _id: typing.Optional[str] = None, _local_seq: typing.Optional[str] = None, _rev: typing.Optional[str] = None, _revisions: typing.Optional[ibmcloudant.cloudant_v1.Revisions] = None, _revs_info: typing.Optional[typing.List[ibmcloudant.cloudant_v1.DocumentRevisionStatus]] = None, **kwargs)
   :canonical: ibmcloudant.cloudant_v1.Document

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Document
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Document.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.Document
      :canonical: ibmcloudant.cloudant_v1.Document.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Document.from_dict
         :parser: myst

   .. py:method:: get_properties() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Document.get_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Document.get_properties
         :parser: myst

   .. py:method:: set_properties(_dict: dict)
      :canonical: ibmcloudant.cloudant_v1.Document.set_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Document.set_properties
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Document.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Document.to_dict
         :parser: myst

.. py:class:: DocumentResult(id: str, *, rev: typing.Optional[str] = None, ok: typing.Optional[bool] = None, caused_by: typing.Optional[str] = None, error: typing.Optional[str] = None, reason: typing.Optional[str] = None, ref: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.DocumentResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DocumentResult
      :canonical: ibmcloudant.cloudant_v1.DocumentResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DocumentResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentResult.to_dict
         :parser: myst

.. py:class:: DocumentRevisionStatus(rev: str, status: str)
   :canonical: ibmcloudant.cloudant_v1.DocumentRevisionStatus

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.__init__
      :parser: myst

   .. py:class:: StatusEnum()
      :canonical: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum.__init__
         :parser: myst

      .. py:attribute:: AVAILABLE
         :canonical: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum.AVAILABLE
         :value: 'available'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum.AVAILABLE
            :parser: myst

      .. py:attribute:: DELETED
         :canonical: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum.DELETED
         :value: 'deleted'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum.DELETED
            :parser: myst

      .. py:attribute:: MISSING
         :canonical: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum.MISSING
         :value: 'missing'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.StatusEnum.MISSING
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DocumentRevisionStatus
      :canonical: ibmcloudant.cloudant_v1.DocumentRevisionStatus.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DocumentRevisionStatus.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentRevisionStatus.to_dict
         :parser: myst

.. py:class:: DocumentShardInfo(nodes: typing.List[str], range: str)
   :canonical: ibmcloudant.cloudant_v1.DocumentShardInfo

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentShardInfo
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentShardInfo.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.DocumentShardInfo
      :canonical: ibmcloudant.cloudant_v1.DocumentShardInfo.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentShardInfo.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.DocumentShardInfo.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.DocumentShardInfo.to_dict
         :parser: myst

.. py:class:: ExecutionStats(execution_time_ms: float, results_returned: int, total_docs_examined: int, total_keys_examined: int, total_quorum_docs_examined: int)
   :canonical: ibmcloudant.cloudant_v1.ExecutionStats

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExecutionStats
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExecutionStats.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ExecutionStats
      :canonical: ibmcloudant.cloudant_v1.ExecutionStats.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExecutionStats.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ExecutionStats.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExecutionStats.to_dict
         :parser: myst

.. py:class:: ExplainResult(covering: bool, dbname: str, fields: typing.List[str], index: ibmcloudant.cloudant_v1.IndexInformation, limit: int, opts: ibmcloudant.cloudant_v1.ExplainResultOpts, selector: dict, skip: int, *, index_candidates: typing.Optional[typing.List[ibmcloudant.cloudant_v1.IndexCandidate]] = None, mrargs: typing.Optional[ibmcloudant.cloudant_v1.ExplainResultMrArgs] = None, partitioned: typing.Optional[object] = None, selector_hints: typing.Optional[typing.List[ibmcloudant.cloudant_v1.SelectorHint]] = None)
   :canonical: ibmcloudant.cloudant_v1.ExplainResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ExplainResult
      :canonical: ibmcloudant.cloudant_v1.ExplainResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ExplainResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResult.to_dict
         :parser: myst

.. py:class:: ExplainResultMrArgs(*, conflicts: typing.Optional[object] = None, direction: typing.Optional[str] = None, end_key: typing.Optional[object] = None, include_docs: typing.Optional[bool] = None, partition: typing.Optional[str] = None, reduce: typing.Optional[bool] = None, stable: typing.Optional[bool] = None, start_key: typing.Optional[object] = None, update: typing.Optional[object] = None, view_type: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.ExplainResultMrArgs

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs.__init__
      :parser: myst

   .. py:class:: ViewTypeEnum()
      :canonical: ibmcloudant.cloudant_v1.ExplainResultMrArgs.ViewTypeEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs.ViewTypeEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs.ViewTypeEnum.__init__
         :parser: myst

      .. py:attribute:: MAP
         :canonical: ibmcloudant.cloudant_v1.ExplainResultMrArgs.ViewTypeEnum.MAP
         :value: 'map'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs.ViewTypeEnum.MAP
            :parser: myst

      .. py:attribute:: REDUCE
         :canonical: ibmcloudant.cloudant_v1.ExplainResultMrArgs.ViewTypeEnum.REDUCE
         :value: 'reduce'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs.ViewTypeEnum.REDUCE
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ExplainResultMrArgs
      :canonical: ibmcloudant.cloudant_v1.ExplainResultMrArgs.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ExplainResultMrArgs.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultMrArgs.to_dict
         :parser: myst

.. py:class:: ExplainResultOpts(bookmark: str, conflicts: bool, execution_stats: bool, fields: typing.List[str], limit: int, partition: str, r: int, skip: int, sort: object, stable: bool, stale: bool, update: bool, use_index: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.ExplainResultOpts

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultOpts
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultOpts.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ExplainResultOpts
      :canonical: ibmcloudant.cloudant_v1.ExplainResultOpts.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultOpts.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ExplainResultOpts.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ExplainResultOpts.to_dict
         :parser: myst

.. py:class:: FindResult(bookmark: str, docs: typing.List[ibmcloudant.cloudant_v1.Document], *, execution_stats: typing.Optional[ibmcloudant.cloudant_v1.ExecutionStats] = None, warning: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.FindResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.FindResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.FindResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.FindResult
      :canonical: ibmcloudant.cloudant_v1.FindResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.FindResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.FindResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.FindResult.to_dict
         :parser: myst

.. py:class:: GetDbUpdatesEnums
   :canonical: ibmcloudant.cloudant_v1.GetDbUpdatesEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums
      :parser: myst

   .. py:class:: Feed()
      :canonical: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.__init__
         :parser: myst

      .. py:attribute:: CONTINUOUS
         :canonical: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.CONTINUOUS
         :value: 'continuous'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.CONTINUOUS
            :parser: myst

      .. py:attribute:: EVENTSOURCE
         :canonical: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.EVENTSOURCE
         :value: 'eventsource'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.EVENTSOURCE
            :parser: myst

      .. py:attribute:: LONGPOLL
         :canonical: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.LONGPOLL
         :value: 'longpoll'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.LONGPOLL
            :parser: myst

      .. py:attribute:: NORMAL
         :canonical: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.NORMAL
         :value: 'normal'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetDbUpdatesEnums.Feed.NORMAL
            :parser: myst

.. py:class:: GetLocalDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.GetLocalDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums
      :parser: myst

   .. py:class:: Accept()
      :canonical: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.__init__
         :parser: myst

      .. py:attribute:: APPLICATION_JSON
         :canonical: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.APPLICATION_JSON
         :value: 'application/json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.APPLICATION_JSON
            :parser: myst

      .. py:attribute:: APPLICATION_OCTET_STREAM
         :canonical: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.APPLICATION_OCTET_STREAM
         :value: 'application/octet-stream'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.APPLICATION_OCTET_STREAM
            :parser: myst

      .. py:attribute:: MULTIPART_MIXED
         :canonical: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.MULTIPART_MIXED
         :value: 'multipart/mixed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.MULTIPART_MIXED
            :parser: myst

      .. py:attribute:: MULTIPART_RELATED
         :canonical: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.MULTIPART_RELATED
         :value: 'multipart/related'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetLocalDocumentEnums.Accept.MULTIPART_RELATED
            :parser: myst

.. py:class:: GetSchedulerDocsEnums
   :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums
      :parser: myst

   .. py:class:: States()
      :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.__init__
         :parser: myst

      .. py:attribute:: COMPLETED
         :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.COMPLETED
         :value: 'completed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.COMPLETED
            :parser: myst

      .. py:attribute:: CRASHING
         :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.CRASHING
         :value: 'crashing'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.CRASHING
            :parser: myst

      .. py:attribute:: ERROR
         :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.ERROR
         :value: 'error'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.ERROR
            :parser: myst

      .. py:attribute:: FAILED
         :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.FAILED
         :value: 'failed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.FAILED
            :parser: myst

      .. py:attribute:: INITIALIZING
         :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.INITIALIZING
         :value: 'initializing'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.INITIALIZING
            :parser: myst

      .. py:attribute:: PENDING
         :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.PENDING
         :value: 'pending'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.PENDING
            :parser: myst

      .. py:attribute:: RUNNING
         :canonical: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.RUNNING
         :value: 'running'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.GetSchedulerDocsEnums.States.RUNNING
            :parser: myst

.. py:class:: IndexAnalysis(covering: bool, ranking: int, reasons: typing.List[ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason], usable: bool)
   :canonical: ibmcloudant.cloudant_v1.IndexAnalysis

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysis
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysis.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexAnalysis
      :canonical: ibmcloudant.cloudant_v1.IndexAnalysis.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysis.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexAnalysis.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysis.to_dict
         :parser: myst

.. py:class:: IndexAnalysisExclusionReason(*, name: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.__init__
      :parser: myst

   .. py:class:: NameEnum()
      :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.__init__
         :parser: myst

      .. py:attribute:: ALPHABETICALLY_COMES_AFTER
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.ALPHABETICALLY_COMES_AFTER
         :value: 'alphabetically_comes_after'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.ALPHABETICALLY_COMES_AFTER
            :parser: myst

      .. py:attribute:: EMPTY_SELECTOR
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.EMPTY_SELECTOR
         :value: 'empty_selector'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.EMPTY_SELECTOR
            :parser: myst

      .. py:attribute:: EXCLUDED_BY_USER
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.EXCLUDED_BY_USER
         :value: 'excluded_by_user'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.EXCLUDED_BY_USER
            :parser: myst

      .. py:attribute:: FIELD_MISMATCH
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.FIELD_MISMATCH
         :value: 'field_mismatch'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.FIELD_MISMATCH
            :parser: myst

      .. py:attribute:: IS_PARTIAL
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.IS_PARTIAL
         :value: 'is_partial'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.IS_PARTIAL
            :parser: myst

      .. py:attribute:: LESS_OVERLAP
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.LESS_OVERLAP
         :value: 'less_overlap'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.LESS_OVERLAP
            :parser: myst

      .. py:attribute:: NEEDS_TEXT_SEARCH
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.NEEDS_TEXT_SEARCH
         :value: 'needs_text_search'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.NEEDS_TEXT_SEARCH
            :parser: myst

      .. py:attribute:: SCOPE_MISMATCH
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.SCOPE_MISMATCH
         :value: 'scope_mismatch'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.SCOPE_MISMATCH
            :parser: myst

      .. py:attribute:: SORT_ORDER_MISMATCH
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.SORT_ORDER_MISMATCH
         :value: 'sort_order_mismatch'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.SORT_ORDER_MISMATCH
            :parser: myst

      .. py:attribute:: TOO_MANY_FIELDS
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.TOO_MANY_FIELDS
         :value: 'too_many_fields'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.TOO_MANY_FIELDS
            :parser: myst

      .. py:attribute:: UNFAVORED_TYPE
         :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.UNFAVORED_TYPE
         :value: 'unfavored_type'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.NameEnum.UNFAVORED_TYPE
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason
      :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexAnalysisExclusionReason.to_dict
         :parser: myst

.. py:class:: IndexCandidate(analysis: ibmcloudant.cloudant_v1.IndexAnalysis, index: ibmcloudant.cloudant_v1.IndexInformation)
   :canonical: ibmcloudant.cloudant_v1.IndexCandidate

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexCandidate
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexCandidate.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexCandidate
      :canonical: ibmcloudant.cloudant_v1.IndexCandidate.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexCandidate.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexCandidate.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexCandidate.to_dict
         :parser: myst

.. py:class:: IndexDefinition(*, default_analyzer: typing.Optional[ibmcloudant.cloudant_v1.Analyzer] = None, default_field: typing.Optional[ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField] = None, fields: typing.Optional[typing.List[ibmcloudant.cloudant_v1.IndexField]] = None, index_array_lengths: typing.Optional[bool] = None, partial_filter_selector: typing.Optional[dict] = None)
   :canonical: ibmcloudant.cloudant_v1.IndexDefinition

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexDefinition
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexDefinition.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexDefinition
      :canonical: ibmcloudant.cloudant_v1.IndexDefinition.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexDefinition.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexDefinition.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexDefinition.to_dict
         :parser: myst

.. py:class:: IndexField(*, name: typing.Optional[str] = None, type: typing.Optional[str] = None, **kwargs)
   :canonical: ibmcloudant.cloudant_v1.IndexField

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.__init__
      :parser: myst

   .. py:class:: TypeEnum()
      :canonical: ibmcloudant.cloudant_v1.IndexField.TypeEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.TypeEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.TypeEnum.__init__
         :parser: myst

      .. py:attribute:: BOOLEAN
         :canonical: ibmcloudant.cloudant_v1.IndexField.TypeEnum.BOOLEAN
         :value: 'boolean'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.TypeEnum.BOOLEAN
            :parser: myst

      .. py:attribute:: NUMBER
         :canonical: ibmcloudant.cloudant_v1.IndexField.TypeEnum.NUMBER
         :value: 'number'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.TypeEnum.NUMBER
            :parser: myst

      .. py:attribute:: STRING
         :canonical: ibmcloudant.cloudant_v1.IndexField.TypeEnum.STRING
         :value: 'string'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.TypeEnum.STRING
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexField
      :canonical: ibmcloudant.cloudant_v1.IndexField.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.from_dict
         :parser: myst

   .. py:method:: get_properties() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexField.get_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.get_properties
         :parser: myst

   .. py:method:: set_properties(_dict: dict)
      :canonical: ibmcloudant.cloudant_v1.IndexField.set_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.set_properties
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexField.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexField.to_dict
         :parser: myst

.. py:class:: IndexInformation(ddoc: str, def_: ibmcloudant.cloudant_v1.IndexDefinition, name: str, type: str, *, partitioned: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.IndexInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.__init__
      :parser: myst

   .. py:class:: TypeEnum()
      :canonical: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum.__init__
         :parser: myst

      .. py:attribute:: JSON
         :canonical: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum.JSON
         :value: 'json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum.JSON
            :parser: myst

      .. py:attribute:: SPECIAL
         :canonical: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum.SPECIAL
         :value: 'special'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum.SPECIAL
            :parser: myst

      .. py:attribute:: TEXT
         :canonical: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum.TEXT
         :value: 'text'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.TypeEnum.TEXT
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexInformation
      :canonical: ibmcloudant.cloudant_v1.IndexInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexInformation.to_dict
         :parser: myst

.. py:class:: IndexResult(id: str, name: str, result: str)
   :canonical: ibmcloudant.cloudant_v1.IndexResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult.__init__
      :parser: myst

   .. py:class:: ResultEnum()
      :canonical: ibmcloudant.cloudant_v1.IndexResult.ResultEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult.ResultEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult.ResultEnum.__init__
         :parser: myst

      .. py:attribute:: CREATED
         :canonical: ibmcloudant.cloudant_v1.IndexResult.ResultEnum.CREATED
         :value: 'created'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult.ResultEnum.CREATED
            :parser: myst

      .. py:attribute:: EXISTS
         :canonical: ibmcloudant.cloudant_v1.IndexResult.ResultEnum.EXISTS
         :value: 'exists'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult.ResultEnum.EXISTS
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexResult
      :canonical: ibmcloudant.cloudant_v1.IndexResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexResult.to_dict
         :parser: myst

.. py:class:: IndexTextOperatorDefaultField(*, analyzer: typing.Optional[ibmcloudant.cloudant_v1.Analyzer] = None, enabled: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField
      :canonical: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexTextOperatorDefaultField.to_dict
         :parser: myst

.. py:class:: IndexesInformation(total_rows: int, indexes: typing.List[ibmcloudant.cloudant_v1.IndexInformation])
   :canonical: ibmcloudant.cloudant_v1.IndexesInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexesInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexesInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.IndexesInformation
      :canonical: ibmcloudant.cloudant_v1.IndexesInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexesInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.IndexesInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.IndexesInformation.to_dict
         :parser: myst

.. py:class:: MembershipInformation(all_nodes: typing.List[str], cluster_nodes: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.MembershipInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.MembershipInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.MembershipInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.MembershipInformation
      :canonical: ibmcloudant.cloudant_v1.MembershipInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.MembershipInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.MembershipInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.MembershipInformation.to_dict
         :parser: myst

.. py:class:: Ok(*, ok: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.Ok

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Ok
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Ok.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.Ok
      :canonical: ibmcloudant.cloudant_v1.Ok.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Ok.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Ok.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Ok.to_dict
         :parser: myst

.. py:class:: PartitionInformation(db_name: str, doc_count: int, doc_del_count: int, partition: str, sizes: ibmcloudant.cloudant_v1.PartitionInformationSizes, *, partitioned_indexes: typing.Optional[ibmcloudant.cloudant_v1.PartitionInformationIndexes] = None)
   :canonical: ibmcloudant.cloudant_v1.PartitionInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.PartitionInformation
      :canonical: ibmcloudant.cloudant_v1.PartitionInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.PartitionInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformation.to_dict
         :parser: myst

.. py:class:: PartitionInformationIndexes(*, count: typing.Optional[int] = None, indexes: typing.Optional[ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes] = None, limit: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.PartitionInformationIndexes

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexes
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexes.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.PartitionInformationIndexes
      :canonical: ibmcloudant.cloudant_v1.PartitionInformationIndexes.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexes.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.PartitionInformationIndexes.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexes.to_dict
         :parser: myst

.. py:class:: PartitionInformationIndexesIndexes(*, search: typing.Optional[int] = None, view: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes
      :canonical: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationIndexesIndexes.to_dict
         :parser: myst

.. py:class:: PartitionInformationSizes(*, active: typing.Optional[int] = None, external: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.PartitionInformationSizes

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationSizes
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationSizes.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.PartitionInformationSizes
      :canonical: ibmcloudant.cloudant_v1.PartitionInformationSizes.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationSizes.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.PartitionInformationSizes.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionInformationSizes.to_dict
         :parser: myst

.. py:class:: PartitionedIndexesDetailedInformation(*, search: typing.Optional[int] = None, view: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation
      :canonical: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation.to_dict
         :parser: myst

.. py:class:: PartitionedIndexesInformation(*, count: typing.Optional[int] = None, indexes: typing.Optional[ibmcloudant.cloudant_v1.PartitionedIndexesDetailedInformation] = None, limit: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.PartitionedIndexesInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.PartitionedIndexesInformation
      :canonical: ibmcloudant.cloudant_v1.PartitionedIndexesInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.PartitionedIndexesInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PartitionedIndexesInformation.to_dict
         :parser: myst

.. py:class:: PostChangesAsStreamEnums
   :canonical: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums
      :parser: myst

   .. py:class:: Feed()
      :canonical: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.__init__
         :parser: myst

      .. py:attribute:: CONTINUOUS
         :canonical: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.CONTINUOUS
         :value: 'continuous'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.CONTINUOUS
            :parser: myst

      .. py:attribute:: EVENTSOURCE
         :canonical: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.EVENTSOURCE
         :value: 'eventsource'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.EVENTSOURCE
            :parser: myst

      .. py:attribute:: LONGPOLL
         :canonical: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.LONGPOLL
         :value: 'longpoll'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.LONGPOLL
            :parser: myst

      .. py:attribute:: NORMAL
         :canonical: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.NORMAL
         :value: 'normal'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesAsStreamEnums.Feed.NORMAL
            :parser: myst

.. py:class:: PostChangesEnums
   :canonical: ibmcloudant.cloudant_v1.PostChangesEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums
      :parser: myst

   .. py:class:: Feed()
      :canonical: ibmcloudant.cloudant_v1.PostChangesEnums.Feed

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums.Feed
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.__init__
         :parser: myst

      .. py:attribute:: CONTINUOUS
         :canonical: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.CONTINUOUS
         :value: 'continuous'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.CONTINUOUS
            :parser: myst

      .. py:attribute:: EVENTSOURCE
         :canonical: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.EVENTSOURCE
         :value: 'eventsource'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.EVENTSOURCE
            :parser: myst

      .. py:attribute:: LONGPOLL
         :canonical: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.LONGPOLL
         :value: 'longpoll'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.LONGPOLL
            :parser: myst

      .. py:attribute:: NORMAL
         :canonical: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.NORMAL
         :value: 'normal'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostChangesEnums.Feed.NORMAL
            :parser: myst

.. py:class:: PostDesignDocsQueriesEnums
   :canonical: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums
      :parser: myst

   .. py:class:: Accept()
      :canonical: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums.Accept

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums.Accept
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums.Accept.__init__
         :parser: myst

      .. py:attribute:: APPLICATION_JSON
         :canonical: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums.Accept.APPLICATION_JSON
         :value: 'application/json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums.Accept.APPLICATION_JSON
            :parser: myst

      .. py:attribute:: APPLICATION_OCTET_STREAM
         :canonical: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums.Accept.APPLICATION_OCTET_STREAM
         :value: 'application/octet-stream'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDesignDocsQueriesEnums.Accept.APPLICATION_OCTET_STREAM
            :parser: myst

.. py:class:: PostDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.Batch.OK
            :parser: myst

   .. py:class:: ContentType()
      :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.__init__
         :parser: myst

      .. py:attribute:: APPLICATION_JSON
         :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.APPLICATION_JSON
         :value: 'application/json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.APPLICATION_JSON
            :parser: myst

      .. py:attribute:: APPLICATION_OCTET_STREAM
         :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.APPLICATION_OCTET_STREAM
         :value: 'application/octet-stream'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.APPLICATION_OCTET_STREAM
            :parser: myst

      .. py:attribute:: MULTIPART_MIXED
         :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.MULTIPART_MIXED
         :value: 'multipart/mixed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.MULTIPART_MIXED
            :parser: myst

      .. py:attribute:: MULTIPART_RELATED
         :canonical: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.MULTIPART_RELATED
         :value: 'multipart/related'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PostDocumentEnums.ContentType.MULTIPART_RELATED
            :parser: myst

.. py:class:: PutDesignDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.PutDesignDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDesignDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.PutDesignDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDesignDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDesignDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.PutDesignDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDesignDocumentEnums.Batch.OK
            :parser: myst

.. py:class:: PutDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.Batch.OK
            :parser: myst

   .. py:class:: ContentType()
      :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.__init__
         :parser: myst

      .. py:attribute:: APPLICATION_JSON
         :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.APPLICATION_JSON
         :value: 'application/json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.APPLICATION_JSON
            :parser: myst

      .. py:attribute:: APPLICATION_OCTET_STREAM
         :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.APPLICATION_OCTET_STREAM
         :value: 'application/octet-stream'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.APPLICATION_OCTET_STREAM
            :parser: myst

      .. py:attribute:: MULTIPART_MIXED
         :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.MULTIPART_MIXED
         :value: 'multipart/mixed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.MULTIPART_MIXED
            :parser: myst

      .. py:attribute:: MULTIPART_RELATED
         :canonical: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.MULTIPART_RELATED
         :value: 'multipart/related'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutDocumentEnums.ContentType.MULTIPART_RELATED
            :parser: myst

.. py:class:: PutLocalDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.Batch.OK
            :parser: myst

   .. py:class:: ContentType()
      :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.__init__
         :parser: myst

      .. py:attribute:: APPLICATION_JSON
         :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.APPLICATION_JSON
         :value: 'application/json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.APPLICATION_JSON
            :parser: myst

      .. py:attribute:: APPLICATION_OCTET_STREAM
         :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.APPLICATION_OCTET_STREAM
         :value: 'application/octet-stream'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.APPLICATION_OCTET_STREAM
            :parser: myst

      .. py:attribute:: MULTIPART_MIXED
         :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.MULTIPART_MIXED
         :value: 'multipart/mixed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.MULTIPART_MIXED
            :parser: myst

      .. py:attribute:: MULTIPART_RELATED
         :canonical: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.MULTIPART_RELATED
         :value: 'multipart/related'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutLocalDocumentEnums.ContentType.MULTIPART_RELATED
            :parser: myst

.. py:class:: PutReplicationDocumentEnums
   :canonical: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums
      :parser: myst

   .. py:class:: Batch()
      :canonical: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums.Batch

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums.Batch
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums.Batch.__init__
         :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums.Batch.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.PutReplicationDocumentEnums.Batch.OK
            :parser: myst

.. py:class:: ReplicationCreateTargetParameters(*, n: typing.Optional[int] = None, partitioned: typing.Optional[bool] = None, q: typing.Optional[int] = None)
   :canonical: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters
      :canonical: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters.to_dict
         :parser: myst

.. py:class:: ReplicationDatabase(url: str, *, auth: typing.Optional[ibmcloudant.cloudant_v1.ReplicationDatabaseAuth] = None, headers_: typing.Optional[dict] = None)
   :canonical: ibmcloudant.cloudant_v1.ReplicationDatabase

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabase
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabase.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ReplicationDatabase
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabase.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabase.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabase.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabase.to_dict
         :parser: myst

.. py:class:: ReplicationDatabaseAuth(*, basic: typing.Optional[ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic] = None, iam: typing.Optional[ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam] = None)
   :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ReplicationDatabaseAuth
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuth.to_dict
         :parser: myst

.. py:class:: ReplicationDatabaseAuthBasic(password: str, username: str)
   :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthBasic.to_dict
         :parser: myst

.. py:class:: ReplicationDatabaseAuthIam(api_key: str)
   :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDatabaseAuthIam.to_dict
         :parser: myst

.. py:class:: ReplicationDocument(source: ibmcloudant.cloudant_v1.ReplicationDatabase, target: ibmcloudant.cloudant_v1.ReplicationDatabase, *, _attachments: typing.Optional[dict] = None, _conflicts: typing.Optional[typing.List[str]] = None, _deleted: typing.Optional[bool] = None, _deleted_conflicts: typing.Optional[typing.List[str]] = None, _id: typing.Optional[str] = None, _local_seq: typing.Optional[str] = None, _rev: typing.Optional[str] = None, _revisions: typing.Optional[ibmcloudant.cloudant_v1.Revisions] = None, _revs_info: typing.Optional[typing.List[ibmcloudant.cloudant_v1.DocumentRevisionStatus]] = None, cancel: typing.Optional[bool] = None, checkpoint_interval: typing.Optional[int] = None, connection_timeout: typing.Optional[int] = None, continuous: typing.Optional[bool] = None, create_target: typing.Optional[bool] = None, create_target_params: typing.Optional[ibmcloudant.cloudant_v1.ReplicationCreateTargetParameters] = None, doc_ids: typing.Optional[typing.List[str]] = None, filter: typing.Optional[str] = None, http_connections: typing.Optional[int] = None, query_params: typing.Optional[dict] = None, retries_per_request: typing.Optional[int] = None, selector: typing.Optional[dict] = None, since_seq: typing.Optional[str] = None, socket_options: typing.Optional[str] = None, source_proxy: typing.Optional[str] = None, target_proxy: typing.Optional[str] = None, use_bulk_get: typing.Optional[bool] = None, use_checkpoints: typing.Optional[bool] = None, user_ctx: typing.Optional[ibmcloudant.cloudant_v1.UserContext] = None, winning_revs_only: typing.Optional[bool] = None, worker_batch_size: typing.Optional[int] = None, worker_processes: typing.Optional[int] = None, **kwargs)
   :canonical: ibmcloudant.cloudant_v1.ReplicationDocument

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDocument
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDocument.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ReplicationDocument
      :canonical: ibmcloudant.cloudant_v1.ReplicationDocument.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDocument.from_dict
         :parser: myst

   .. py:method:: get_properties() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ReplicationDocument.get_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDocument.get_properties
         :parser: myst

   .. py:method:: set_properties(_dict: dict)
      :canonical: ibmcloudant.cloudant_v1.ReplicationDocument.set_properties

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDocument.set_properties
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ReplicationDocument.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ReplicationDocument.to_dict
         :parser: myst

.. py:class:: Revisions(ids: typing.List[str], start: int)
   :canonical: ibmcloudant.cloudant_v1.Revisions

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Revisions
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Revisions.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.Revisions
      :canonical: ibmcloudant.cloudant_v1.Revisions.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Revisions.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Revisions.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Revisions.to_dict
         :parser: myst

.. py:class:: RevsDiff(*, missing: typing.Optional[typing.List[str]] = None, possible_ancestors: typing.Optional[typing.List[str]] = None)
   :canonical: ibmcloudant.cloudant_v1.RevsDiff

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.RevsDiff
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.RevsDiff.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.RevsDiff
      :canonical: ibmcloudant.cloudant_v1.RevsDiff.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.RevsDiff.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.RevsDiff.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.RevsDiff.to_dict
         :parser: myst

.. py:class:: SchedulerDocsResult(total_rows: int, docs: typing.List[ibmcloudant.cloudant_v1.SchedulerDocument])
   :canonical: ibmcloudant.cloudant_v1.SchedulerDocsResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocsResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocsResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SchedulerDocsResult
      :canonical: ibmcloudant.cloudant_v1.SchedulerDocsResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocsResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SchedulerDocsResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocsResult.to_dict
         :parser: myst

.. py:class:: SchedulerDocument(database: str, doc_id: str, error_count: int, id: str, info: ibmcloudant.cloudant_v1.SchedulerInfo, last_updated: datetime.datetime, start_time: datetime.datetime, state: str, *, node: typing.Optional[str] = None, source: typing.Optional[str] = None, source_proxy: typing.Optional[str] = None, target: typing.Optional[str] = None, target_proxy: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.SchedulerDocument

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.__init__
      :parser: myst

   .. py:class:: StateEnum()
      :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.__init__
         :parser: myst

      .. py:attribute:: COMPLETED
         :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.COMPLETED
         :value: 'completed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.COMPLETED
            :parser: myst

      .. py:attribute:: CRASHING
         :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.CRASHING
         :value: 'crashing'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.CRASHING
            :parser: myst

      .. py:attribute:: ERROR
         :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.ERROR
         :value: 'error'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.ERROR
            :parser: myst

      .. py:attribute:: FAILED
         :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.FAILED
         :value: 'failed'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.FAILED
            :parser: myst

      .. py:attribute:: INITIALIZING
         :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.INITIALIZING
         :value: 'initializing'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.INITIALIZING
            :parser: myst

      .. py:attribute:: PENDING
         :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.PENDING
         :value: 'pending'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.PENDING
            :parser: myst

      .. py:attribute:: RUNNING
         :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.RUNNING
         :value: 'running'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.StateEnum.RUNNING
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SchedulerDocument
      :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SchedulerDocument.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerDocument.to_dict
         :parser: myst

.. py:class:: SchedulerInfo(*, changes_pending: typing.Optional[int] = None, checkpointed_source_seq: typing.Optional[str] = None, doc_write_failures: typing.Optional[int] = None, docs_read: typing.Optional[int] = None, docs_written: typing.Optional[int] = None, error: typing.Optional[str] = None, missing_revisions_found: typing.Optional[int] = None, revisions_checked: typing.Optional[int] = None, source_seq: typing.Optional[str] = None, through_seq: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.SchedulerInfo

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerInfo
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerInfo.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SchedulerInfo
      :canonical: ibmcloudant.cloudant_v1.SchedulerInfo.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerInfo.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SchedulerInfo.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerInfo.to_dict
         :parser: myst

.. py:class:: SchedulerJob(database: str, doc_id: str, history: typing.List[ibmcloudant.cloudant_v1.SchedulerJobEvent], id: str, info: ibmcloudant.cloudant_v1.SchedulerInfo, node: str, pid: str, source: str, start_time: datetime.datetime, target: str, user: str)
   :canonical: ibmcloudant.cloudant_v1.SchedulerJob

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJob
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJob.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SchedulerJob
      :canonical: ibmcloudant.cloudant_v1.SchedulerJob.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJob.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SchedulerJob.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJob.to_dict
         :parser: myst

.. py:class:: SchedulerJobEvent(timestamp: datetime.datetime, type: str, *, reason: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.SchedulerJobEvent

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobEvent
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobEvent.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SchedulerJobEvent
      :canonical: ibmcloudant.cloudant_v1.SchedulerJobEvent.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobEvent.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SchedulerJobEvent.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobEvent.to_dict
         :parser: myst

.. py:class:: SchedulerJobsResult(total_rows: int, jobs: typing.List[ibmcloudant.cloudant_v1.SchedulerJob])
   :canonical: ibmcloudant.cloudant_v1.SchedulerJobsResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobsResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobsResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SchedulerJobsResult
      :canonical: ibmcloudant.cloudant_v1.SchedulerJobsResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobsResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SchedulerJobsResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SchedulerJobsResult.to_dict
         :parser: myst

.. py:class:: SearchAnalyzeResult(tokens: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.SearchAnalyzeResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchAnalyzeResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchAnalyzeResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SearchAnalyzeResult
      :canonical: ibmcloudant.cloudant_v1.SearchAnalyzeResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchAnalyzeResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SearchAnalyzeResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchAnalyzeResult.to_dict
         :parser: myst

.. py:class:: SearchIndexDefinition(index: str, *, analyzer: typing.Optional[ibmcloudant.cloudant_v1.AnalyzerConfiguration] = None)
   :canonical: ibmcloudant.cloudant_v1.SearchIndexDefinition

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexDefinition
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexDefinition.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SearchIndexDefinition
      :canonical: ibmcloudant.cloudant_v1.SearchIndexDefinition.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexDefinition.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SearchIndexDefinition.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexDefinition.to_dict
         :parser: myst

.. py:class:: SearchIndexInfo(committed_seq: int, disk_size: int, doc_count: int, doc_del_count: int, pending_seq: int, signature: str)
   :canonical: ibmcloudant.cloudant_v1.SearchIndexInfo

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexInfo
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexInfo.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SearchIndexInfo
      :canonical: ibmcloudant.cloudant_v1.SearchIndexInfo.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexInfo.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SearchIndexInfo.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchIndexInfo.to_dict
         :parser: myst

.. py:class:: SearchInfoResult(name: str, search_index: ibmcloudant.cloudant_v1.SearchIndexInfo)
   :canonical: ibmcloudant.cloudant_v1.SearchInfoResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchInfoResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchInfoResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SearchInfoResult
      :canonical: ibmcloudant.cloudant_v1.SearchInfoResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchInfoResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SearchInfoResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchInfoResult.to_dict
         :parser: myst

.. py:class:: SearchResult(total_rows: int, *, bookmark: typing.Optional[str] = None, by: typing.Optional[str] = None, counts: typing.Optional[dict] = None, ranges: typing.Optional[dict] = None, rows: typing.Optional[typing.List[ibmcloudant.cloudant_v1.SearchResultRow]] = None, groups: typing.Optional[typing.List[ibmcloudant.cloudant_v1.SearchResultProperties]] = None)
   :canonical: ibmcloudant.cloudant_v1.SearchResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SearchResult
      :canonical: ibmcloudant.cloudant_v1.SearchResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SearchResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResult.to_dict
         :parser: myst

.. py:class:: SearchResultProperties(total_rows: int, *, bookmark: typing.Optional[str] = None, by: typing.Optional[str] = None, counts: typing.Optional[dict] = None, ranges: typing.Optional[dict] = None, rows: typing.Optional[typing.List[ibmcloudant.cloudant_v1.SearchResultRow]] = None)
   :canonical: ibmcloudant.cloudant_v1.SearchResultProperties

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultProperties
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultProperties.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SearchResultProperties
      :canonical: ibmcloudant.cloudant_v1.SearchResultProperties.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultProperties.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SearchResultProperties.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultProperties.to_dict
         :parser: myst

.. py:class:: SearchResultRow(fields: dict, id: str, *, doc: typing.Optional[ibmcloudant.cloudant_v1.Document] = None, highlights: typing.Optional[dict] = None)
   :canonical: ibmcloudant.cloudant_v1.SearchResultRow

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultRow
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultRow.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SearchResultRow
      :canonical: ibmcloudant.cloudant_v1.SearchResultRow.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultRow.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SearchResultRow.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SearchResultRow.to_dict
         :parser: myst

.. py:class:: Security(*, admins: typing.Optional[ibmcloudant.cloudant_v1.SecurityObject] = None, members: typing.Optional[ibmcloudant.cloudant_v1.SecurityObject] = None, cloudant: typing.Optional[dict] = None, couchdb_auth_only: typing.Optional[bool] = None)
   :canonical: ibmcloudant.cloudant_v1.Security

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.__init__
      :parser: myst

   .. py:class:: CloudantEnum()
      :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.__init__
         :parser: myst

      .. py:attribute:: ADMIN
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.ADMIN
         :value: '_admin'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.ADMIN
            :parser: myst

      .. py:attribute:: DB_UPDATES
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.DB_UPDATES
         :value: '_db_updates'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.DB_UPDATES
            :parser: myst

      .. py:attribute:: DESIGN
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.DESIGN
         :value: '_design'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.DESIGN
            :parser: myst

      .. py:attribute:: READER
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.READER
         :value: '_reader'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.READER
            :parser: myst

      .. py:attribute:: REPLICATOR
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.REPLICATOR
         :value: '_replicator'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.REPLICATOR
            :parser: myst

      .. py:attribute:: SECURITY
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.SECURITY
         :value: '_security'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.SECURITY
            :parser: myst

      .. py:attribute:: SHARDS
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.SHARDS
         :value: '_shards'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.SHARDS
            :parser: myst

      .. py:attribute:: WRITER
         :canonical: ibmcloudant.cloudant_v1.Security.CloudantEnum.WRITER
         :value: '_writer'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.CloudantEnum.WRITER
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.Security
      :canonical: ibmcloudant.cloudant_v1.Security.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.Security.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.Security.to_dict
         :parser: myst

.. py:class:: SecurityObject(*, names: typing.Optional[typing.List[str]] = None, roles: typing.Optional[typing.List[str]] = None)
   :canonical: ibmcloudant.cloudant_v1.SecurityObject

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SecurityObject
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SecurityObject.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SecurityObject
      :canonical: ibmcloudant.cloudant_v1.SecurityObject.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SecurityObject.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SecurityObject.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SecurityObject.to_dict
         :parser: myst

.. py:class:: SelectorHint(indexable_fields: typing.List[str], type: str, unindexable_fields: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.SelectorHint

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint.__init__
      :parser: myst

   .. py:class:: TypeEnum()
      :canonical: ibmcloudant.cloudant_v1.SelectorHint.TypeEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint.TypeEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint.TypeEnum.__init__
         :parser: myst

      .. py:attribute:: JSON
         :canonical: ibmcloudant.cloudant_v1.SelectorHint.TypeEnum.JSON
         :value: 'json'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint.TypeEnum.JSON
            :parser: myst

      .. py:attribute:: TEXT
         :canonical: ibmcloudant.cloudant_v1.SelectorHint.TypeEnum.TEXT
         :value: 'text'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint.TypeEnum.TEXT
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SelectorHint
      :canonical: ibmcloudant.cloudant_v1.SelectorHint.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SelectorHint.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SelectorHint.to_dict
         :parser: myst

.. py:class:: ServerInformation(couchdb: str, features: typing.List[str], vendor: ibmcloudant.cloudant_v1.ServerVendor, version: str, features_flags: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.ServerInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ServerInformation
      :canonical: ibmcloudant.cloudant_v1.ServerInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ServerInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerInformation.to_dict
         :parser: myst

.. py:class:: ServerVendor(name: str, *, variant: typing.Optional[str] = None, version: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.ServerVendor

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerVendor
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerVendor.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ServerVendor
      :canonical: ibmcloudant.cloudant_v1.ServerVendor.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerVendor.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ServerVendor.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ServerVendor.to_dict
         :parser: myst

.. py:class:: SessionAuthentication(authentication_handlers: typing.List[str], *, authenticated: typing.Optional[str] = None, authentication_db: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.SessionAuthentication

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionAuthentication
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionAuthentication.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SessionAuthentication
      :canonical: ibmcloudant.cloudant_v1.SessionAuthentication.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionAuthentication.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SessionAuthentication.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionAuthentication.to_dict
         :parser: myst

.. py:class:: SessionInformation(ok: bool, info: ibmcloudant.cloudant_v1.SessionAuthentication, user_ctx: ibmcloudant.cloudant_v1.UserContext)
   :canonical: ibmcloudant.cloudant_v1.SessionInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.SessionInformation
      :canonical: ibmcloudant.cloudant_v1.SessionInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.SessionInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.SessionInformation.to_dict
         :parser: myst

.. py:class:: ShardsInformation(shards: dict)
   :canonical: ibmcloudant.cloudant_v1.ShardsInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ShardsInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ShardsInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ShardsInformation
      :canonical: ibmcloudant.cloudant_v1.ShardsInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ShardsInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ShardsInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ShardsInformation.to_dict
         :parser: myst

.. py:class:: ThroughputInformation(blocks: int, query: int, read: int, write: int)
   :canonical: ibmcloudant.cloudant_v1.ThroughputInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ThroughputInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ThroughputInformation.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ThroughputInformation
      :canonical: ibmcloudant.cloudant_v1.ThroughputInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ThroughputInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ThroughputInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ThroughputInformation.to_dict
         :parser: myst

.. py:class:: UpInformation(status: str, *, seeds: typing.Optional[dict] = None)
   :canonical: ibmcloudant.cloudant_v1.UpInformation

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.__init__
      :parser: myst

   .. py:class:: StatusEnum()
      :canonical: ibmcloudant.cloudant_v1.UpInformation.StatusEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.StatusEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.StatusEnum.__init__
         :parser: myst

      .. py:attribute:: MAINTENANCE_MODE
         :canonical: ibmcloudant.cloudant_v1.UpInformation.StatusEnum.MAINTENANCE_MODE
         :value: 'maintenance_mode'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.StatusEnum.MAINTENANCE_MODE
            :parser: myst

      .. py:attribute:: NOLB
         :canonical: ibmcloudant.cloudant_v1.UpInformation.StatusEnum.NOLB
         :value: 'nolb'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.StatusEnum.NOLB
            :parser: myst

      .. py:attribute:: OK
         :canonical: ibmcloudant.cloudant_v1.UpInformation.StatusEnum.OK
         :value: 'ok'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.StatusEnum.OK
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.UpInformation
      :canonical: ibmcloudant.cloudant_v1.UpInformation.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.UpInformation.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpInformation.to_dict
         :parser: myst

.. py:class:: UpdatesPending(minimum: int, preferred: int, total: int)
   :canonical: ibmcloudant.cloudant_v1.UpdatesPending

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpdatesPending
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpdatesPending.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.UpdatesPending
      :canonical: ibmcloudant.cloudant_v1.UpdatesPending.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpdatesPending.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.UpdatesPending.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UpdatesPending.to_dict
         :parser: myst

.. py:class:: UserContext(name: str, roles: typing.List[str], *, db: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.UserContext

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.__init__
      :parser: myst

   .. py:class:: RolesEnum()
      :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.__init__
         :parser: myst

      .. py:attribute:: ADMIN
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.ADMIN
         :value: '_admin'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.ADMIN
            :parser: myst

      .. py:attribute:: DB_UPDATES
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.DB_UPDATES
         :value: '_db_updates'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.DB_UPDATES
            :parser: myst

      .. py:attribute:: DESIGN
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.DESIGN
         :value: '_design'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.DESIGN
            :parser: myst

      .. py:attribute:: READER
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.READER
         :value: '_reader'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.READER
            :parser: myst

      .. py:attribute:: REPLICATOR
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.REPLICATOR
         :value: '_replicator'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.REPLICATOR
            :parser: myst

      .. py:attribute:: SECURITY
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.SECURITY
         :value: '_security'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.SECURITY
            :parser: myst

      .. py:attribute:: SHARDS
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.SHARDS
         :value: '_shards'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.SHARDS
            :parser: myst

      .. py:attribute:: WRITER
         :canonical: ibmcloudant.cloudant_v1.UserContext.RolesEnum.WRITER
         :value: '_writer'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.RolesEnum.WRITER
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.UserContext
      :canonical: ibmcloudant.cloudant_v1.UserContext.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.UserContext.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UserContext.to_dict
         :parser: myst

.. py:class:: UuidsResult(uuids: typing.List[str])
   :canonical: ibmcloudant.cloudant_v1.UuidsResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UuidsResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UuidsResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.UuidsResult
      :canonical: ibmcloudant.cloudant_v1.UuidsResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UuidsResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.UuidsResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.UuidsResult.to_dict
         :parser: myst

.. py:class:: ViewQueriesResult(results: typing.List[ibmcloudant.cloudant_v1.ViewResult])
   :canonical: ibmcloudant.cloudant_v1.ViewQueriesResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQueriesResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQueriesResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ViewQueriesResult
      :canonical: ibmcloudant.cloudant_v1.ViewQueriesResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQueriesResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ViewQueriesResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQueriesResult.to_dict
         :parser: myst

.. py:class:: ViewQuery(*, att_encoding_info: typing.Optional[bool] = None, attachments: typing.Optional[bool] = None, conflicts: typing.Optional[bool] = None, descending: typing.Optional[bool] = None, include_docs: typing.Optional[bool] = None, inclusive_end: typing.Optional[bool] = None, limit: typing.Optional[int] = None, skip: typing.Optional[int] = None, update_seq: typing.Optional[bool] = None, end_key: typing.Optional[object] = None, end_key_doc_id: typing.Optional[str] = None, group: typing.Optional[bool] = None, group_level: typing.Optional[int] = None, key: typing.Optional[object] = None, keys: typing.Optional[typing.List[object]] = None, reduce: typing.Optional[bool] = None, stable: typing.Optional[bool] = None, start_key: typing.Optional[object] = None, start_key_doc_id: typing.Optional[str] = None, update: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.ViewQuery

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.__init__
      :parser: myst

   .. py:class:: UpdateEnum()
      :canonical: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum

      Bases: :py:obj:`str`, :py:obj:`enum.Enum`

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum
         :parser: myst

      .. rubric:: Initialization

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum.__init__
         :parser: myst

      .. py:attribute:: FALSE
         :canonical: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum.FALSE
         :value: 'false'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum.FALSE
            :parser: myst

      .. py:attribute:: LAZY
         :canonical: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum.LAZY
         :value: 'lazy'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum.LAZY
            :parser: myst

      .. py:attribute:: TRUE
         :canonical: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum.TRUE
         :value: 'true'

         .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.UpdateEnum.TRUE
            :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ViewQuery
      :canonical: ibmcloudant.cloudant_v1.ViewQuery.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ViewQuery.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewQuery.to_dict
         :parser: myst

.. py:class:: ViewResult(rows: typing.List[ibmcloudant.cloudant_v1.ViewResultRow], *, total_rows: typing.Optional[int] = None, update_seq: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.ViewResult

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResult
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResult.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ViewResult
      :canonical: ibmcloudant.cloudant_v1.ViewResult.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResult.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ViewResult.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResult.to_dict
         :parser: myst

.. py:class:: ViewResultRow(key: object, value: object, *, caused_by: typing.Optional[str] = None, error: typing.Optional[str] = None, reason: typing.Optional[str] = None, ref: typing.Optional[int] = None, doc: typing.Optional[ibmcloudant.cloudant_v1.Document] = None, id: typing.Optional[str] = None)
   :canonical: ibmcloudant.cloudant_v1.ViewResultRow

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResultRow
      :parser: myst

   .. rubric:: Initialization

   .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResultRow.__init__
      :parser: myst

   .. py:method:: from_dict(_dict: typing.Dict) -> ibmcloudant.cloudant_v1.ViewResultRow
      :canonical: ibmcloudant.cloudant_v1.ViewResultRow.from_dict
      :classmethod:

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResultRow.from_dict
         :parser: myst

   .. py:method:: to_dict() -> typing.Dict
      :canonical: ibmcloudant.cloudant_v1.ViewResultRow.to_dict

      .. autodoc2-docstring:: ibmcloudant.cloudant_v1.ViewResultRow.to_dict
         :parser: myst
